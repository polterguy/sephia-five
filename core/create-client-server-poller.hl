
/*
 * Creates an (invisible) widget that constantly polls the server to check
 * if new emails have arrived.
 *
 * This widget will create a timer function in JavaScript, that checks the server every n'th second,
 * to see if new emails have arrived. It will constantly run in the background, and notify the user
 * through a "bubble" window if new emails have arrived.
 *
 * If the POP3 "user thread" throws an exception, it will also display that exception to the user.
 *
 * This file also resets the "count" which is incremented once for each POP3 check operation in our "user thread",
 * which unless it is reset before it reaches "5", will allow the "POP3 user thread" to simply stop, by finishing its work.
 */

create-literal-widget:sephia-poller
  element:span
  style:"display:none; !important"
  oninit

    /*
     * Invoking checker initially, which will start our "loop".
     *
     * We do this by simply invoking the [.oncheck] Ajax event for our widget.
     */
    p5.web.widgets.ajax-events.raise:x:/../*/_event?value
      .oncheck

  events

    /*
     * Creates a JavaScript object that will poll towards the server, 
     * invoking our [.oncheck] below, after n seconds.
     */
    sephia.core.create-poller-javascript
      p5.web.send-javascript:@"setTimeout(function(){p5.$('sephia-poller').raise('.oncheck')}, 10000);"

  .oncheck

    /*
     * We'll need this later to parametrize some of our invocations below.
     */
    whoami

    /*
     * Making sure we have synchronised access to the "thread signal object".
     */
    lock:sephia.core.thread-signal-object-{0}
      :x:/@whoami/*/username?value

      /*
       * Retrieving the thread signal object from p5.data.
       */
      select-data:x:/*/*/sephia.core.thread-signal-object-{0}
        :x:/@whoami/*/username?value

    /*
     * Checking if thread is still running.
     */
    if:x:/@lock/*/select-data/*/*/running?value

      /*
       * Thread is still running.
       *
       * Now we must check if new emails have arrived from POP3 server.
       * We do this by selecting the MIME ID of the newest email in database, and comparing it towards
       * a ViewState value that tracks the last fetched email.
       */
      p5.mysql.connect:[sephia]
        p5.mysql.select:@"select mimeid from emails where username = @username and type='received' order by id desc limit 1"
          @username:x:/@whoami/*/username?value

      /*
       * Then we retrieve the page value which wraps our "last known MIME ID".
       */
      p5.web.viewstate.get:sephia.emails.last-known

      /*
       * Then we compare these values.
       */
      if:x:/@p5.mysql.connect/*/p5.mysql.select/*/*/mimeid?value
        !=:x:/@p5.web.viewstate.get/*?value
        and:x:/@p5.web.viewstate.get/*?value

        /*
         * We have received at least one new email.
         */
        load-file:@SEPHIA/inbox/update-page-title.hl
        eval:x:/-/*

        /*
         * Notifying user.
         */
        micro.windows.info:You have new emails, click Inbox to see them.

      /*
       * Updating "last known email".
       */
      p5.web.viewstate.set:sephia.emails.last-known
        src:x:/@p5.mysql.connect/*/p5.mysql.select/*/*/mimeid?value

      /*
       * Making sure we poll towards server again after some n seconds.
       */
      sephia.core.create-poller-javascript

      /*
       * Making sure we have synchronised access to our "thread signal object".
       */
      lock:sephia.core.thread-signal-object-{0}
        :x:/@whoami/*/username?value

        /*
         * Zeroing out "thread count" to make sure thread doesn't stop running.
         */
        update-data:x:/*/*/sephia.core.thread-signal-object-{0}/*/running/*/count?value
          :x:/@whoami/*/username?value
          src:int:0

    else-if:x:/@lock/*/select-data/*/*/restart?value

      /*
       * Thread was stopped and should be restarted for some reasons.
       *
       * Might be caused by for instance that the user's settings was changed.
       */
      delete-data:x:/*/*/sephia.core.thread-signal-object-{0}
        :x:/@whoami/*/username?value
      load-file:@SEPHIA/core/create-pop3-user-thread.hl
      eval:x:/-/*
      sephia.core.create-poller-javascript

    else-if:x:/@lock/*/select-data/*/*/error

      /*
       * Thread has stopped running, and contains an error exception message.
       *
       * Invoking our "error handler".
       */
      load-file:@SEPHIA/core/handle-pop3-error.hl
      eval-x:x:/+/*
      eval:x:/-2/*
        message:x:/@lock/*/select-data/*/*/error/*/message?value
        stack-trace:x:/@lock/*/select-data/*/*/error/*/stack-trace?value
        type:x:/@lock/*/select-data/*/*/error/*/type?value
