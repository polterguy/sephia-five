
/*
 * Creates the initial welcome emails for user, that welcomes him to Sephia Five,
 * and gives him some hints about how he can use Sephia.
 *
 * In addition, it will also insert the user's initial contacts.
 *
 * Both of these parts are configurable, and can be found in Sephia's "/configuration/" folder.
 */





/*
 * Opening up database connection.
 */
p5.mysql.connect:[sephia]

  /*
   * Needed to parametrize SQL queries and insertions.
   */
  whoami

  /*
   * Before we start our transaction, which has some cost to it - We check if user
   * has already any existing contacts, and if so, we simply return early, since user
   * has already started using Sephia earlier, and probably have received these welcoming
   * emails previously.
   */
  p5.mysql.scalar:@"select count(*) from contacts where username = @username"
    @username:x:/@whoami/*/username?value

  /*
   * Accommodating for "self", which at this point has (probably) been inserted into database.
   */
  if:x:/-?value.int
    >:int:1

    /*
     * User has already started using Sephia Five previously, returning early.
     */
    return

  /*
   * Needed further below.
   */
  p5.auth.my-settings.get

  /*
   * Creating transaction object, to avoid having partial emails inserted 
   * into our database.
   */
  p5.mysql.transaction.begin

    /*
     * Ensuring "self" exists, which might not be the case, even though this is the first time
     * user starts Sephia, since "self" could theoretically have had its settings setup before
     * user started using Sephia.
     */
    p5.mysql.scalar:@"select count(*) from contacts where username = @username and type = 'self'"
      @username:x:/@whoami/*/username?value
    if:x:/-?value.int
      =:int:0

      /*
       * "Self" does not exists, making insertion into database.
       */
      _is-verified:int:0
      if:x:/@p5.auth.my-settings.get/*/sephia/*/pgp-key?value
        and:x:/@p5.auth.my-settings.get/*/sephia/*/pgp-key?value
          !=:
        set:x:/@_is-verified?value
          src:int:1
      p5.mysql.insert:@"insert into contacts (name, email, username, fingerprint, isverified, type, spam) values (@name, @email, @username, @fingerprint, @isverified, 'self', 0)"
        @name:x:/@p5.auth.my-settings.get/*/sephia/*/name?value
        @email:x:/@p5.auth.my-settings.get/*/sephia/*/email?value
        @username:x:/@whoami/*/username?value
        @fingerprint:x:/@p5.auth.my-settings.get/*/sephia/*/pgp-key?value
        @isverified:x:/@_is-verified?value

    /*
     * Then loading up all default contacts, and inserting them into database for user.
     */
    load-file:@SEPHIA/configuration/initial-contacts.hl

    /*
     * Looping through results of above file, and inserting a new contact for each entry.
     */
    for-each:x:/@load-file/*/*/contact

      /*
       * Parametrizing and invoking [sephia._internals.contacts.create].
       */
      add:x:/..for-each/*/sephia._internals.contacts.create
        src:@"username:{0}"
          :x:/@whoami/*/username?value
      add:x:/..for-each/*/sephia._internals.contacts.create
        src:x:/@_dp/#/*
      sephia._internals.contacts.create

    /*
     * Loading configuration file that contains the initial welcoming email user
     * receives when he first starts Sephia Five.
     */
    load-file:@SEPHIA/configuration/welcome-emails.hl

    /*
     * Making sure we insert our "To" parts into all welcome emails our configuration 
     * file contains, such that the currently logged in user becomes the recipient of
     * all "welcome emails".
     */
    add:x:/+/*/*
      src:@"{0}:{1}"
        :x:/@p5.auth.my-settings.get/*/sephia/*/name?value
        :x:/@p5.auth.my-settings.get/*/sephia/*/email?value
    insert-after:x:/@load-file/*/*/envelope/*/From
      src
        To

    /*
     * Needed to create an accurate date of when user "received" his welcome email,
     * which paradoxically becomes his inital usage date.
     */
    p5.types.date.now

    /*
     * Looping through each "welcome email" in our configuration file.
     */
    for-each:x:/@load-file/*/*/envelope

      /*
       * Checking if currently iterated email does not have an HTML view, and if not, 
       * making sure we create one, by converting its text content to HTML using Markdown.
       */
      if:x:/@_dp/#/*/multipart/*/text/=html
        not
        and:x:/@_dp/#/*/multipart/*/text/=plain/*/content?value

        /*
         * Converting text content to HTML, and inserting it into email as an alternative HTML view.
         */
        sephia.core.markdown.to-html:x:/@_dp/#/*/multipart/*/text/=plain/*/content?value
        eval-x:x:/+/*/*/*
        add:x:/@_dp/#/*/multipart
          src
            text:html
              content:x:/@sephia.core.markdown.to-html?value

      /*
       * Inserting currently iterated email, by invoking file responsible for 
       * doing that. Making sure we forward evaluate all arguments.
       */
      add:x:/..for-each/*/micro.evaluate.file
        src:x:/@_dp/#
      eval-x:x:/..for-each/*/micro.evaluate.file/*
      micro.evaluate.file:@SEPHIA/core/save-pop3-email-2-database.hl
        username:x:/@whoami/*/username?value

    /*
     * Committing transaction.
     */
    p5.mysql.transaction.commit

