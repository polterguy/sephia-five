
/*
 * Creating database schema if it doesn't exist.
 *
 * Notice, you will need to have access to a MySQL database, and you must have declared its
 * connection string in your web.config.
 *
 * However, you don't need to create the schema for your database, this file will automatically
 * do that for you, unless the tables have already been created.
 *
 * Notice, it is important that your web.config connection string is using a "charset" of "utf8mb4",
 * otherwise you might get weird bugs when inserting emails into your database that uses high characters,
 * such as smileys, etc.
 */
try
  p5.mysql.connect:[sephia]
    p5.mysql.execute:@"
CREATE TABLE IF NOT EXISTS `contacts` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(1024) COLLATE utf8mb4_unicode_ci NOT NULL,
  `email` varchar(1024) COLLATE utf8mb4_unicode_ci NOT NULL,
  `username` char(45) COLLATE utf8mb4_unicode_ci NOT NULL,
  `fingerprint` varchar(256) NULL,
  `isverified` int unsigned NOT NULL DEFAULT 0,
  `type` varchar(256) NULL,
  `spam` INT(10) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `id_UNIQUE` (`id`),
  KEY `index_email` (`email`(50)),
  KEY `index_name` (`name`(50)),
  KEY `index_username` (`username`)
) ENGINE=InnoDB AUTO_INCREMENT=0 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
CREATE TABLE IF NOT EXISTS `emails` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `subject` varchar(4096) NOT NULL,
  `babelsubject` varchar(4096) NULL,
  `date` datetime NOT NULL,
  `sender` int(10) unsigned NOT NULL,
  `username` varchar(45) NOT NULL,
  `isread` int(10) unsigned NOT NULL,
  `mimeid` varchar(2048) NOT NULL,
  `signature` varchar(1024) DEFAULT NULL,
  `fingerprint` VARCHAR(256) NULL,
  `encrypted` int(11) unsigned NOT NULL,
  `type` varchar(45) NOT NULL,
  `inreplyto` varchar(2048),
  `status` int(10) unsigned NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `id_UNIQUE` (`id`),
  KEY `index_mimeid` (`mimeid`(50)),
  KEY `email_sender_idx` (`sender`),
  CONSTRAINT `fk_emails_contacts` FOREIGN KEY (`sender`) REFERENCES `contacts` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=0 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
CREATE TABLE IF NOT EXISTS `attachments` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `filename` varchar(4096) NOT NULL,
  `prefix` varchar(45) NOT NULL,
  `folder` varchar(4096) NOT NULL,
  `emailid` int(10) unsigned NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `id_UNIQUE` (`id`),
  KEY `attachments_emails_idx` (`emailid`),
  CONSTRAINT `fk_attachments_emails` FOREIGN KEY (`emailid`) REFERENCES `emails` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=0 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
CREATE TABLE IF NOT EXISTS `parts` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `type` varchar(45) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `content` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `emailid` int(11) unsigned NOT NULL,
  `markdown` int(10) unsigned NOT NULL DEFAULT 0,
  UNIQUE KEY `id_UNIQUE` (`id`),
  KEY `part_emailid_idx` (`emailid`),
  CONSTRAINT `fk_parts_emails` FOREIGN KEY (`emailid`) REFERENCES `emails` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=0 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
CREATE TABLE IF NOT EXISTS `recipients` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `contactid` int(10) unsigned NOT NULL,
  `type` varchar(45) NOT NULL,
  `emailid` int(10) unsigned NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `id_UNIQUE` (`id`),
  KEY `recipients_emails_idx` (`emailid`),
  KEY `recipients_contacts_idx` (`contactid`),
  CONSTRAINT `fk_recipients_contacts` FOREIGN KEY (`contactid`) REFERENCES `contacts` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fk_recipients_emails` FOREIGN KEY (`emailid`) REFERENCES `emails` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=0 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;"

catch

  /*
   * Attempting to create database, unless this is our second invocation, for then
   * to invoke self again, for simplicity reasons.
   */
  if:x:/../*/second?value
    not

    /*
     * Creating database schema.
     */
    p5.mysql.connect:[sys]
      p5.mysql.execute:@"CREATE SCHEMA `sephia`;"

    /*
     * Invoking self, with [second] being true, to avoid never ending recursion.
     */
    micro.evaluate.file:x:/..?name
      second:bool:true
