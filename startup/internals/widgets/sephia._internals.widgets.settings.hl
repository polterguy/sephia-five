
/*
 * Creates our "settings" widget.
 *
 * Will create a settings form, from where the user can change his personal settings, such as his POP3
 * server, username, password, etc.
 *
 * Takes no arguments.
 */
create-event:sephia._internals.widgets.settings

  /*
   * Retrieving settings and setting initial values.
   */
  p5.auth.my-settings.get

  /*
   * Verifying key user has declared to use in his settings actually exists, and if not, 
   * removing it from settings object, such that it doesn't become saved in user's settings.
   *
   * Otherwise it would be impossible to remove a key that doesn't exist in GnuPG database.
   */
  p5.crypto.list-private-keys:x:/@p5.auth.my-settings.get/*/sephia/*/pgp-key?value
  if:x:/-/*?count
    =:int:0
    set:x:/@p5.auth.my-settings.get/*/sephia/*/pgp-key
    set:x:/@p5.auth.my-settings.get/*/sephia/*/pgp-password

  /*
   * Default values for settings.
   *
   * Notice, we're simply using GMail server settings here.
   * The [signature] we're fetching from our configuration file.
   */
  load-file:@SEPHIA/config/default-signature.hl
  eval-x:x:/+/*/signature
  .defaults
    pop3-server:pop.gmail.com
    pop3-port:995
    pop3-ssl:bool:true
    smtp-server:smtp.gmail.com
    smtp-port:465
    smtp-ssl:bool:true
    signature:x:/@load-file/*/*?value
    preferred-content-type:html
    markdown-composer:bool:true
    pgp-subjects:"https://www.nytimes.com, https://www.wsj.com"

  /*
   * Making sure we check the correct "perferred content type" radio button.
   */
  add:x:/../*/return/**/input/*/type/=radio/./*/.data-field/=preferred-content-type/./*/.data-value/={0}/.
    :x:(/../*/p5.auth.my-settings.get/*/sephia/*/preferred-content-type|/../*/.defaults/*/preferred-content-type)/$?value
    src
      checked

  /*
   * Checking if user wants to compose emails using Markdown.
   */
  if:x:(/../*/p5.auth.my-settings.get/*/sephia/*/markdown-composer|/../*/.defaults/*/markdown-composer)/$?value
    add:x:/../*/return/**/input/*/type/=checkbox/./*/.data-field/=markdown-composer/.
      src:checked

  /*
   * Returning widget to caller, making sure we forward evaluate properties.
   */
  eval-x:x:/+/**/view/=databound/**/value|/+/**/input(/=sephia-settings-pgp-key|/=sephia-settings-pgp-password|/=sephia-settings-subject-generator)/*/value
  return
    container
      class:sephia-settings
      widgets

        /*
         * Hidden input element that stores the selected private PGP key's fingerprint.
         */
        input:sephia-settings-pgp-key
          type:hidden
          .data-field:pgp-key
          value:x:(/../*/p5.auth.my-settings.get/*/sephia/*/pgp-key|/../*/.defaults/*/pgp-key)/$?value

        /*
         * Using a Micro tab widget to organize the different groups of settings.
         */
        micro.widgets.tab:sephia-settings-tab
          class:micro-tab micro-tab-border

          /*
           * Misc. settings, name, email and signature.
           */
          view:databound
            name:Misc
            widgets
              div
                class:row
                widgets
                  div
                    class:col
                    widgets
                      label
                        innerValue:Name and email
              div
                class:row
                widgets
                  div
                    class:col-50
                    widgets
                      div
                        class:strip fill
                        widgets
                          label
                            for:sephia-settings-name
                            innerValue:Your name
                          input:sephia-settings-name
                            .data-field:name
                            type:text
                            placeholder:Your name ...
                            value:x:(/../*/p5.auth.my-settings.get/*/sephia/*/name|/../*/.defaults/*/name)/$?value
                            oninit
                              micro.page.set-focus:sephia-settings-name
                  div
                    class:col-50
                    widgets
                      div
                        class:strip fill
                        widgets
                          label
                            for:sephia-settings-email
                            innerValue:Your email
                          input:sephia-settings-email
                            .data-field:email
                            type:text
                            placeholder:Your email ...
                            value:x:(/../*/p5.auth.my-settings.get/*/sephia/*/email|/../*/.defaults/*/email)/$?value

              div
                class:row air-top
                widgets
                  div
                    class:col
                    widgets
                      label
                        for:sephia-settings-signature
                        innerValue:Signature
                      literal:sephia-settings-signature
                        .data-field:signature
                        class:fill
                        element:textarea
                        placeholder:Signature ...
                        rows:7
                        value:x:(/../*/p5.auth.my-settings.get/*/sephia/*/signature|/../*/.defaults/*/signature)/$?value
              div
                class:row
                widgets
                  div
                    class:col
                    widgets
                      input:sephia-settings-compose-markdown
                        type:checkbox
                        .data-field:markdown-composer
                      label
                        for:sephia-settings-compose-markdown
                        innerValue:I'd like to compose emails using Markdown
                        title:Is only valid when composing new emails, not when replying to emails, or forwarding emails
              div
                class:row
                widgets
                  div
                    class:col
                    widgets
                      input:sephia-setting-prefer-html
                        type:radio
                        .data-field:preferred-content-type
                        .data-value:html
                        name:sephia-preferred-content-type
                      label
                        for:sephia-setting-prefer-html
                        innerValue:I prefer to read HTML emails
                      input:sephia-setting-prefer-plain
                        type:radio
                        .data-field:preferred-content-type
                        .data-value:plain
                        name:sephia-preferred-content-type
                      label
                        for:sephia-setting-prefer-plain
                        innerValue:I prefer to read plain text emails

          /*
           * POP3 settings.
           */
          view:databound
            name:POP3
            widgets
              div
                class:row
                widgets
                  div
                    class:col
                    widgets
                      label
                        innerValue:POP3 server settings
              div
                class:row
                widgets
                  div
                    class:col-50
                    widgets
                      div
                        class:strip fill
                        widgets
                          label
                            innerValue:Server
                            for:sephia-settings-pop3-server
                          input:sephia-settings-pop3-server
                            .data-field:pop3-server
                            type:text
                            placeholder:Server ...
                            value:x:(/../*/p5.auth.my-settings.get/*/sephia/*/pop3-server|/../*/.defaults/*/pop3-server)/$?value
                            oninit
                              micro.page.set-focus:sephia-settings-pop3-server
                  div
                    class:col-50
                    widgets
                      div
                        class:strip fill
                        widgets
                          label
                            innerValue:Port
                            for:sephia-settings-pop3-port
                          input:sephia-settings-pop3-port
                            type:number
                            .data-field:pop3-port
                            placeholder:Port ...
                            value:x:(/../*/p5.auth.my-settings.get/*/sephia/*/pop3-port|/../*/.defaults/*/pop3-port)/$?value
                          label
                            for:sephia-settings-pop3-ssl
                            innerValue:SSL
                          span
                            widgets
                              input:sephia-settings-pop3-ssl
                                .data-field:pop3-ssl
                                type:checkbox
                                checked
              div
                class:row air-top
                widgets
                  div
                    class:col
                    widgets
                      label
                        innerValue:POP3 username/password
              div
                class:row
                widgets
                  div
                    class:col-50
                    widgets
                      div
                        class:strip fill
                        widgets
                          label
                            innerValue:Username
                            for:sephia-settings-pop3-username
                          input:sephia-settings-pop3-username
                            .data-field:pop3-username
                            type:text
                            placeholder:Username ...
                            value:x:(/../*/p5.auth.my-settings.get/*/sephia/*/pop3-username|/../*/.defaults/*/pop3-username)/$?value
                  div
                    class:col-50
                    widgets
                      div
                        class:strip fill
                        widgets
                          label
                            innerValue:Password
                            for:sephia-settings-pop3-password
                          input:sephia-settings-pop3-password
                            type:password
                            autocomplete:new-password
                            .data-field:pop3-password
                            placeholder:Password ...
                            value:x:(/../*/p5.auth.my-settings.get/*/sephia/*/pop3-password|/../*/.defaults/*/pop3-password)/$?value

          /*
           * SMTP settings.
           */
          view:databound
            name:SMTP
            widgets
              div
                class:row
                widgets
                  div
                    class:col
                    widgets
                      label
                        innerValue:SMTP server settings
              div
                class:row
                widgets
                  div
                    class:col-50
                    widgets
                      div
                        class:strip fill
                        widgets
                          label
                            innerValue:Server
                            for:sephia-settings-smtp-server
                          input:sephia-settings-smtp-server
                            .data-field:smtp-server
                            type:text
                            placeholder:Server ...
                            value:x:(/../*/p5.auth.my-settings.get/*/sephia/*/smtp-server|/../*/.defaults/*/smtp-server)/$?value
                            oninit
                              micro.page.set-focus:sephia-settings-smtp-server
                  div
                    class:col-50
                    widgets
                      div
                        class:strip fill
                        widgets
                          label
                            innerValue:Port
                            for:sephia-settings-smtp-port
                          input:sephia-settings-smtp-port
                            type:number
                            .data-field:smtp-port
                            placeholder:Port ...
                            value:x:(/../*/p5.auth.my-settings.get/*/sephia/*/smtp-port|/../*/.defaults/*/smtp-port)/$?value
                          label
                            for:sephia-settings-smtp-ssl
                            innerValue:SSL
                          span
                            widgets
                              input:sephia-settings-smtp-ssl
                                .data-field:smtp-ssl
                                type:checkbox
                                checked
              div
                class:row air-top
                widgets
                  div
                    class:col
                    widgets
                      label
                        innerValue:SMTP username/password
              div
                class:row
                widgets
                  div
                    class:col-50
                    widgets
                      div
                        class:strip fill
                        widgets
                          label
                            innerValue:Username
                            for:sephia-settings-smtp-username
                          input:sephia-settings-smtp-username
                            .data-field:smtp-username
                            type:text
                            placeholder:Username ...
                            value:x:(/../*/p5.auth.my-settings.get/*/sephia/*/smtp-username|/../*/.defaults/*/smtp-username)/$?value
                  div
                    class:col-50
                    widgets
                      div
                        class:strip fill
                        widgets
                          label
                            innerValue:Password
                            for:sephia-settings-smtp-password
                          input:sephia-settings-smtp-password
                            type:password
                            autocomplete:new-password
                            .data-field:smtp-password
                            placeholder:Password ...
                            value:x:(/../*/p5.auth.my-settings.get/*/sephia/*/smtp-password|/../*/.defaults/*/smtp-password)/$?value

          /*
           * Cryptography settings.
           */
          view
            name:Crypto
            widgets
              micro.widgets.grid:pgp-keys
                class:hover
                columns
                  User ID
                  Strength
                  Created
                  Expires
                oninit

                  /*
                   * Listing all private keys, and databinding our grid 
                   * towards all existing private keys from GnuPG database.
                   *
                   * Making sure we only list keys that have an "@" in their User IDs, to
                   * only list keys that seems to be intended for sending emails.
                   */
                  p5.crypto.list-private-keys:@

                  /*
                   * Hiding grid of keys and password wrapper if no private keys exists.
                   */
                  if:x:/@p5.crypto.list-private-keys/*?count
                    =:int:0

                    /*
                     * No private keys in GnuPG database.
                     */
                    set-widget-property:pgp-keys
                      visible:false
                    set-widget-property:sephia-settings-pgp-pwd-wrapper
                      visible:false
                    return

                  else

                    /*
                     * To be sure we re-display widgets again, we explicitly invoke set visible.
                     */
                    set-widget-property:pgp-keys
                      visible:true
                    set-widget-property:sephia-settings-pgp-pwd-wrapper
                      visible:true

                  /*
                   * Getting the details of all keys listed from above, which we will
                   * use when databinding the grid containing all private PGP keys, before
                   * we loop through each key and add it up to our databind invocation below.
                   */
                  p5.crypto.get-key-details:x:/@p5.crypto.list-private-keys/*?name
                  for-each:x:/-/*

                    /*
                     * To have a uniform way of displaying keys, we make sure they're always displayed as UPPERS.
                     */
                    set:x:/@_dp/#?name
                      to-upper:x:/@_dp/#?name

                    /*
                     * Adding item, and formatting both the creation and expires date nicely for
                     * displaying in our grid.
                     */
                    add:x:/../*/micro.widgets.grid.databind
                      src:item
                    p5.types.date.format:x:/@_dp/#/*/creation-time?value
                      format:"dd. MMM yyyy"
                    p5.types.date.format:x:/@_dp/#/*/expires?value
                      format:"dd. MMM yyyy"

                    /*
                     * User IDs normally contains angle brackets, hence we must HTML encode the User ID
                     * before we can display it to the user.
                     */
                    p5.html.html-encode:x:/@_dp/#/*/user-ids/0?value

                    /*
                     * Adding each cell to our grid, making sure we forward evaluate their values.
                     */
                    eval-x:x:/+/*/**
                    add:x:/../*/micro.widgets.grid.databind/0/-
                      src
                        User ID:x:/@p5.html.html-encode?value
                        Strength:x:/@_dp/#/*/strength?value
                        Created:x:/..for-each/*/p5.types.date.format/[0,1]?value
                        Expires:x:/..for-each/*/p5.types.date.format/[1,2]?value
                        .row
                          title:"Fingerprint:{0}"
                            :x:/@_dp/#?name

                    /*
                     * Making sure our grid rows becomes clickable.
                     */
                    eval-x:x:/+/*/*/*/*/_fingerprint
                    add:x:/../*/micro.widgets.grid.databind/0/-
                      src
                        .row

                          /*
                           * Handled to make sure we set the selected fingerprint into selected mode,
                           * if the user has previously selected a PGP key in this tab view.
                           *
                           * This is done by setting a hidden field's value to the fingerprint of the
                           * key the user has previously selected.
                           */
                          oninit

                            /*
                             * Forward evaluated above.
                             */
                            _fingerprint:x:/@_dp/#?name

                            /*
                             * Checking if this is the active PGP key.
                             */
                            get-widget-property:sephia-settings-pgp-key
                              value
                            if:x:/@get-widget-property/*/*?value
                              =:x:/@_fingerprint?value

                              /*
                               * Making sure "tr" row becomes "selected".
                               */
                              set-widget-property:x:/../*/_event?value
                                class:selected

                          /*
                           * Handled to make user able to select a PGP key
                           * by simply clicking the row associated with the key.
                           *
                           * The actual key fingerprint is stored in a hidden input 
                           * element in the tab control itself, with a [.data-field] such that
                           * when we later serialize form, we can easily retrieve the fingerprint
                           * of the selected key.
                           */
                          onclick

                            /*
                             * Forward evaluated above.
                             */
                            _fingerprint:x:/@_dp/#?name

                            /*
                             * Removing the "selected" class on all rows in grid.
                             */
                            p5.web.widgets.get-parent:x:/../*/_event?value
                            p5.web.widgets.get-children:x:/-/*/*?value
                            delete-widget-property:x:/-/*/*?value
                              class

                            /*
                             * Adding the "selected" class on currently clicked row.
                             */
                            set-widget-property:x:/../*/_event?value
                              class:selected

                            /*
                             * Settings the value of our hidden input field to the fingerprint
                             * of the currently clicked key.
                             */
                            set-widget-property:sephia-settings-pgp-key
                              value:x:/@_fingerprint?value

                            /*
                             * Notifying user that he'll probably need to update his 
                             * PGP key passphrase, and setting focus to passphrase textbox.
                             */
                            micro.windows.info:You'll probably need to update your key passphrase
                            micro.page.set-focus:sephia-settings-pgp-password

                  /*
                   * Now we can finally databind our grid towards the private 
                   * PGP keys in GnuPG storage.
                   */
                  micro.widgets.grid.databind:pgp-keys

              div:sephia-settings-pgp-pwd-wrapper
                class:row air-top
                widgets
                  div
                    class:col
                    widgets
                      div
                        class:strip fill
                        widgets
                          label
                            for:sephia-settings-pgp-password
                            innerValue:Password
                          input:sephia-settings-pgp-password
                            .data-field:pgp-password
                            type:password
                            placeholder:Your PGP password ...
                            value:x:(/../*/p5.auth.my-settings.get/*/sephia/*/pgp-password|/../*/.defaults/*/pgp-password)/$?value
              div
                class:row
                widgets
                  div
                    class:col
                    widgets
                      div
                        class:strip fill
                        widgets
                          label
                            innerValue:Subjects
                            for:sephia-settings-subject-generator
                          input:sephia-settings-subject-generator
                            type:text
                            .data-field:pgp-subjects
                            value:x:(/../*/p5.auth.my-settings.get/*/sephia/*/pgp-subjects|/../*/.defaults/*/pgp-subjects)/$?value
                            placeholder:A comma separated list of URLs from where random subjects will be generated ...
                            title:A comma separated list of URLs from where random subjects will be generated
              div
                class:row
                widgets
                  div
                    class:col right
                    widgets
                      button
                        style:"margin-bottom:0;"
                        innerValue:Create new PGP key pair ...
                        onclick

                          /*
                           * Shows a modal window, allowing user to start creation of a new PGP keypair.
                           *
                           * Retrieving settings user has already filled out, to use as initial suggestion for
                           * name and email part of key-creation process.
                           */
                          p5.web.widgets.get-parent:sephia-settings-tab
                          micro.form.serialize:x:/-/*/*?value
                          eval-x:x:/+/*/*/*/micro.widgets.wizard-form/*/text/*/value
                          create-widgets
                            micro.widgets.modal:sephia-create-pgp-key-modal
                              class:micro-modal micro-modal-smaller
                              widgets
                                h3
                                  innerValue:Create new PGP keypair
                                micro.widgets.wizard-form:sephia-create-new-pgp-key
                                  text:sephia-key-name
                                    .data-field:name
                                    info:Name
                                    value:x:/@micro.form.serialize/*/name?value
                                    oninit
                                      micro.page.set-focus:x:/../*/_event?value
                                  text:sephia-key-email
                                    .data-field:email
                                    info:Email
                                    value:x:/@micro.form.serialize/*/email?value
                                  text:sephia-key-password
                                    .data-field:password
                                    info:Password
                                    type:password
                                    autocomplete:new-password
                                  text:sephia-key-name-password-repeat
                                    .data-field:password-repeat
                                    info:Repeat
                                    type:password
                                    autocomplete:new-password
                                  label
                                    for:sephia-key-seed
                                    innerValue:Seed
                                  textarea:sephia-key-seed
                                    .data-field:seed
                                    info:Some optional random text to seed the random number generator. Just type in a random sequence of characters here ...
                                  radio-group
                                    .data-field:strength
                                    options
                                      1024bit
                                        .data-value:1024
                                        title:Should only be used for testing purposes, but will be created very fast
                                      2048bit
                                        .data-value:2048
                                        title:Should only be used for testing purposes, but will be created fast
                                      4096bit
                                        .data-value:4096
                                        checked
                                        title:Recommended, but might take several minutes to create
                                      8192bit
                                        .data-value:8192
                                        title:Might take a very very long time to create!! Overkill!!
                                  br
                                  checkbox
                                    .data-field:submit
                                    info:Submit to key servers
                                    checked
                                  div
                                    class:right
                                    style:"clear:both;"
                                    widgets
                                      div
                                        class:strip
                                        style:"display:inline-block;"
                                        widgets

                                          /*
                                           * Button that will create the user's PGP keypair.
                                           */
                                          button
                                            innerValue:Create
                                            onclick

                                              /*
                                               * Serializing form data and using it to create a new PGP keypair.
                                               */
                                              micro.form.serialize:sephia-create-new-pgp-key

                                              /*
                                               * Verifying that passwords are a match.
                                               */
                                              if:x:/@micro.form.serialize/*/password?value
                                                !=:x:/@micro.form.serialize/*/password-repeat?value

                                                /*
                                                 * Passwords didn't match.
                                                 */
                                                p5.web.widgets.find-first-like
                                                  class:micro-modal-content
                                                eval-x:x:/+/*
                                                micro.windows.info:Your passwords are not matching
                                                  parent:x:/@p5.web.widgets.find-first-like/*/*?value
                                                  class:micro-windows-info micro-windows-info-error
                                                return

                                              /*
                                               * Verifying that a password was given.
                                               */
                                              if:x:/@micro.form.serialize/*/password?value
                                                =:

                                                /*
                                                 * No password was given.
                                                 */
                                                p5.web.widgets.find-first-like
                                                  class:micro-modal-content
                                                eval-x:x:/+/*
                                                micro.windows.info:You must supply a password
                                                  parent:x:/@p5.web.widgets.find-first-like/*/*?value
                                                  class:micro-windows-info micro-windows-info-error
                                                return

                                              /*
                                               * Forking a new thread, having PGP keypair created on worker thread.
                                               */
                                              add:x:/../*/fork/*/.settings
                                                src:x:/@micro.form.serialize/*
                                              fork

                                                /*
                                                 * Settings for our keypair, added before fork is created.
                                                 */
                                                .settings

                                                /*
                                                 * Creating keypair.
                                                 */
                                                p5.crypto.create-pgp-keypair
                                                  identity:{0} <{1}>
                                                    :x:/@.settings/*/name?value
                                                    :x:/@.settings/*/email?value
                                                  password:x:/@.settings/*/password?value
                                                  seed:x:/@.settings/*/seed?value
                                                  strength:x:/@.settings/*/strength?value

                                                /*
                                                 * Submitting public key to Ubuntu's key server, but only if user told us to do so.
                                                 */
                                                if:x:/@.settings/*/submit?value

                                                  /*
                                                   * This even returns false if it was unsuccessful in submitting the key.
                                                   */
                                                  sephia.pgp.key-server.submit:x:/@p5.crypto.create-pgp-keypair/*/fingerprint?value
                                                  if:x:/-?value
                                                    not

                                                    /*
                                                     * TODO: Implement some sort of cross threading general error support signal.
                                                     */

                                              /*
                                               * Deleting modal widget.
                                               */
                                              delete-widget:sephia-create-pgp-key-modal

                                              /*
                                               * Providing feedback to user.
                                               */
                                              create-widgets
                                                micro.widgets.modal:sephia-create-new-pgp-key-info
                                                  class:micro-modal micro-modal-smaller
                                                  widgets
                                                    h3
                                                      innerValue:Information
                                                    p
                                                      innerValue:@"Notice, this might take some few minutes, depending upon your key size. 
    Feel free to do something else in the meantime, and come back here later to see if it's done a couple of minutes from now."
                                                    div
                                                      class:right
                                                      widgets
                                                        button
                                                          innerValue:OK
                                                          oninit
                                                            micro.page.set-focus:x:/../*/_event?value
                                                          onclick
                                                            delete-widget:sephia-create-new-pgp-key-info

                                          /*
                                           * Button that will close the modal widget.
                                           */
                                          button
                                            innerValue:Close
                                            title:Close window without creating a PGP keypair
                                            onclick

                                              /*
                                               * Simply closing modal widget.
                                               */
                                              delete-widget:sephia-create-pgp-key-modal


        /*
         * Save button, beneath our tab widget.
         */
        div
          class:right air-top
          widgets
            div
              class:strip
              style:"display:inline-block;"
              widgets

                /*
                 * Save button at the bottom of form, beneath the tab widget.
                 */
                button
                  innerValue:Save
                  title:Saves your settings and closes this form
                  onclick

                    /*
                     * Serializing all setting values, and storing in user settings.
                     */
                    p5.web.widgets.get-parent:sephia-settings-tab
                    micro.form.serialize:x:/-/*/*?value
                    add:x:/+/*
                      src:x:/@micro.form.serialize/*
                    p5.auth.my-settings.set
                      sephia

                    /*
                     * Notice, before we can re-relaunch inbox, we must signal any fetcher threads that they should restart,
                     * to update settings.
                     */
                    whoami

                    /*
                     * Making sure we synchronise access to thread signal object.
                     */
                    lock:sephia.core.thread-creator-signal-object-{0}
                      :x:/@whoami/*/username?value

                      /*
                       * Deleting old thread signal object.
                       */
                      delete-data:x:/*/*/sephia.core.thread-signal-object-{0}
                        :x:/@whoami/*/username?value

                      /*
                       * Creating a new thread signal object, that informs thread to restart.
                       */
                      eval-x:x:/+/*
                      set:x:/+/*?name
                        src:sephia.core.thread-signal-object-{0}
                          :x:/@whoami/*/username?value
                      insert-data
                        thread
                          restart:bool:true

                    /*
                     * Updating contacts table with email matching current user, making sure its name becomes correct.
                     */
                    p5.mysql.connect:[sephia]
                      p5.mysql.update:@"update contacts set name = @name, fingerprint = @fingerprint, isverified = 1 where email = @email and username = @username"
                        @name:x:/@micro.form.serialize/*/name?value
                        @fingerprint:x:/@micro.form.serialize/*/pgp-key?value
                        @email:x:/@micro.form.serialize/*/email?value
                        @username:x:/@whoami/*/username?value

                      /*
                       * Verifying something was indeed updated, and if not, making sure we insert a new record.
                       */
                      if:x:/@p5.mysql.update?value.int
                        =:int:0

                        /*
                         * Nothing was updated, hence we'll need to insert a new record.
                         */
                        p5.mysql.insert:@"insert into contacts (name, email, username) values (@name, @email, @username)"
                          @name:x:/@micro.form.serialize/*/name?value
                          @email:x:/@micro.form.serialize/*/email?value
                          @username:x:/@whoami/*/username?value

                    /*
                     * Re-launches inbox for simplicity.
                     */
                    load-file:@SEPHIA/launch.hl
                    eval:x:/-/*

                    /*
                     * Giving user feedback
                     */
                    micro.windows.info:Your settings was successfully saved

                /*
                 * Close button that will close settings without updating them.
                 */
                button
                  innerValue:Close
                  title:Close settings without saving your changes
                  onclick

                    /*
                     * Re-launches Sephia for simplicity.
                     */
                    load-file:@SEPHIA/launch.hl
                    eval:x:/-/*
