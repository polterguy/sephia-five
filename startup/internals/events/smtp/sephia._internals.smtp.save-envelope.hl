
/*
 * Saves outgoing [envelope] to database.
 *
 * Expects [envelope] as argument, being entire SMTP envelope.
 *
 * Also expects (outside of envelope) one [file] object for each attachment, 
 * having a value pointing to filename, a [prefix] and a [folder] as arguments, which once
 * combined together, becomes the file's complete path.
 */
create-event:sephia._internals.smtp.save-envelope

  /*
   * Sanity checking invocation.
   */
  micro.lambda.contract.min:x:/..
    envelope
      To
      Sender
      Subject
      body

  /*
   * Open database connection.
   */
  p5.mysql.connect:[sephia]

    /*
     * Using database transaction, to avoid having incomplete database objects,
     * in case an exception occurs.
     */
    p5.mysql.transaction.begin

      /*
       * Needed later.
       */
      whoami

      /*
       * First adding any non existing contacts.
       */
      for-each:x:/../*/envelope/*(/To|/Cc|/Bcc)/*

        /*
         * Checking if contact exists from before.
         */
        p5.mysql.select:@"select count(*) from contacts where username = @username and email = @email"
          @username:x:/@whoami/*/username?value
          @email:x:/@_dp/#?value
        if:x:/@p5.mysql.select/*?count.int
          =:int:0

          /*
           * Inserting new contact, defaulting name to "Unknown".
           */
          p5.mysql.insert:@"insert into contacts (name, email, username) values ('Unknown', @email, @username)"
            @email:x:/@_dp/#?value
            @username:x:/@whoami/*/username?value

      /*
       * Checking if "sender" (self) exists in contact database.
       */
      _sender
      p5.mysql.select:@"select * from contacts where username = @username and email = @email"
        @username:x:/@whoami/*/username?value
        @email:x:/../*/envelope/*/Sender/*?value
      if:x:/@p5.mysql.select/*?count.int
        =:int:0

        /*
         * Inserting "self" (sender) into "contacts" table in database.
         */
        p5.auth.my-settings.get
        p5.mysql.insert:@"insert into contacts (name, email, username) values (@name, @email, @username)"
          @name:x:/@p5.auth.my-settings.get/*/sephia/*/name?value
          @email:x:/@p5.auth.my-settings.get/*/sephia/*/email?value
          @username:x:/@whoami/*/username?value
        set:x:/@_sender?value
          src:x:/@p5.mysql.insert/*/id?value

      else

        /*
         * Self already exists in contacts table in database.
         */
        set:x:/@_sender?value
          src:x:/@p5.mysql.select/0/*/id?value

      /*
       * Checking if email is encrypted.
       */
      _encrypt:int:0
      if:x:/../*/envelope/*/body/*/multipart/*/encrypt
        set:x:/@_encrypt?value
          src:int:1

      /*
       * Checking if email is signed.
       */
      _signature
      _fingerprint
      if:x:/../*/envelope/*/body/*/multipart/*/sign

        /*
         * Retrieving PGP key's fingerprint, and doing lookup into 
         * GnuPG database to find its User ID, making sure we store both signature and fingerprint
         * of key as we insert our email into database.
         * Notice, we do a [to-upper] conversion of fingerprint, to make sure we store all
         * fingerprints the same way.
         */
        set:x:/@_fingerprint?value
          to-upper:x:/../*/envelope/*/body/*/multipart/*/sign/*/fingerprint?value
        p5.crypto.get-key-details:x:/../*/envelope/*/body/*/multipart/*/sign/*/fingerprint?value
        set:x:/@_signature?value
          src:x:/@p5.crypto.get-key-details/*/*/user-ids/0?value

      /*
       * Inserting into "email" table in database.
       */
      p5.types.date.now
        local:true
      p5.mysql.insert:@"insert into emails (subject, date, sender, username, isread, mimeid, signature, fingerprint, encrypted, type, inreplyto) values (@subject, @date, @sender, @username, 1, @mimeid, @signature, @fingerprint, @encrypted, 'sent', @inreplyto)"
        @subject:x:/../*/envelope/*/Subject?value
        @date:x:/@p5.types.date.now?value
        @sender:x:/@_sender?value
        @username:x:/@whoami/*/username?value
        @mimeid:x:/../*/envelope?value
        @encrypted:x:/@_encrypt?value
        @signature:x:/@_signature?value
        @fingerprint:x:/@_fingerprint?value
        @inreplyto:x:/../*/envelope/*/In-Reply-To?value

      /*
       * Inserting into "parts" table in database.
       */
      p5.mysql.insert:@"insert into parts (type, content, emailid) values ('plain', @content, @emailid)"
        @content:x:/../*/envelope/*/body/**/text/=plain/*/content?value
        @emailid:x:/@p5.mysql.insert/@p5.mysql.insert/*/id?value

      /*
       * Checking if HTML view was given.
       */
      if:x:/../*/envelope/*/body/**/text/=html/*/content?value

        /*
         * Inserting also alternative HTML view.
         */
        p5.mysql.insert:@"insert into parts (type, content, emailid) values ('html', @content, @emailid)"
          @content:x:/../*/envelope/*/body/**/text/=html/*/content?value
          @emailid:x:/@p5.mysql.insert/@p5.mysql.insert/@p5.mysql.insert/*/id?value

      /*
       * Inserting into "recipients" table in database.
       */
      for-each:x:/../*/envelope/*(/To|/Cc|/Bcc)/*
        p5.mysql.select:@"select id from contacts where username = @username and email = @email"
          @username:x:/@whoami/*/username?value
          @email:x:/../*/envelope/*/Sender/*?value
        p5.mysql.insert:@"insert into recipients (contactid, type, emailid) values (@contactid, @type, @emailid)"
          @contactid:x:/@p5.mysql.select/*/*/id?value
          @type:x:/@_dp/#/.?name
          @emailid:x:/..for-each/@p5.mysql.insert/@p5.mysql.insert/*/id?value

      /*
       * Inserting into "attachments" table in database.
       */
      for-each:x:/../*/file
        p5.io.unroll-path:x:/@_dp/#/*/folder?value
        p5.mysql.insert:@"insert into attachments (filename, prefix, folder, emailid) values (@filename, @prefix, @folder, @emailid)"
          @filename:x:/@_dp/#?value
          @prefix:x:/@_dp/#/*/prefix?value
          @folder:x:/@p5.io.unroll-path?value
          @emailid:x:/@p5.mysql.insert/@p5.mysql.insert/@p5.mysql.insert/*/id?value

      /*
       * Committing transaction.
       */
      p5.mysql.transaction.commit
