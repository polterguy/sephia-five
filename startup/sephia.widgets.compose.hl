
/*
 * Extension widget for composing an email.
 * Optionally you can pass in [subject], [body], [recipients][to], [recipients][cc] and [recipients][bcc].
 *
 * You can also optionally pass in [.onclose] and [.onsend] lambda callbacks, which will be invoked when
 * email composer is closed and/or email is sent, in addition to [class], which will be the root class
 * of the composer.
 */
create-event:sephia.widgets.compose

  /*
   * Default values for arguments not supplied.
   */
  .defaults
    class:air-inner

  /*
   * Checking if we've got public cryptography keys for all recipients.
   * First checking if we have any recipients.
   */
  _bg
  if:x:/../*/recipients/*/*?count
    >:int:0

    /*
     * Then listing public cryptography keys matching recipients list, and making sure count equals
     * the total number of recipients in email.
     */
    p5.crypto.list-public-keys:x:/../*/recipients/*/*?name
    if:x:/@p5.crypto.list-public-keys/*?count
      =:x:/../*/recipients/*/*?count

      /*
       * Email can be encrypted.
       */
      set:x:/@_bg?value
        src:bg

    else

      /*
       * Email can not be encrypted.
       */
      set:x:/@_bg?value
        src:warning

  /*
   * Including JavaScript necessary to handle uploading of attachments.
   */
  p5.web.include-javascript:@"
p5.sephia_upload_files = function(e) {
  var files = e.target.files;
  for(var i = 0; i < files.length; i++) {
    var reader = new FileReader();
    reader.onload = (function(file) {
      return function(data) {
        p5.$(e.target.id).raise('.onupload', {
          onbefore:function(pars,evt) {
            pars.push(['sephia-file-name', file.name], ['sephia-file-content', data.target.result.split('base64,')[1]]);
          }
        });
      }
    })(files[i]);
    reader.readAsDataURL(files[i]);
  }
}
"

  /*
   * Adding lambda callbacks for both [.onclose] and [.onsend].
   */
  add:x:/../*/return/*/div/*/.onsend
    src:x:/../*/.onsend/*
  add:x:/../*/return/*/div/*/.onclose
    src:x:/../*/.onclose/*

  /*
   * Returning actual widget to caller.
   */
  eval-x:x:/../*/return/**/widgets/=content/*(/input|/literal)/*/value|/+2/*/*/class
  add:x:/../*/return/**/sephia.widgets._recipients
    src:x:/../*/recipients/*
  return
    div
      .onsend
      .onclose
      .email-composer
      class:{0} {1}
        :x:/@_bg?value
        :x:(/../*/class|/@.defaults/*/class)/$?value
      widgets:content

        /*
         * Subject of reply.
         */
        input
          type:text
          class:fill
          placeholder:Subject ...
          .data-field:subject
          value:x:/../*/subject?value
          oninit

            /*
             * Settings initial focus to "subject" of email.
             */
            micro.page.set-focus:x:/../*/_event?value

        /*
         * Body of reply.
         */
        literal
          element:textarea
          class:fill
          placeholder:Subject of email ...
          .data-field:body
          rows:20
          value:x:/../*/body?value

        /*
         * Wrapper for attachments.
         */
        container
          class:sephia-attachments

        /*
         * Our "select recipient" extension widget.
         */
        sephia.widgets._recipients

        /*
         * Button strip at bottom for "send", "discard", etc.
         */
        div
          class:right
          widgets
            div
              class:strip
              style:"display:inline-block;"
              widgets
                button
                  innerValue:Send
                  style:"margin-bottom:0;"
                  onclick

                    /*
                     * Sending email.
                     *
                     * Making sure we wrap attempt in try/catch block, to give user friendly error messages.
                     */
                    try

                      /*
                       * Finding root composer widget, and serializing all form elements within it.
                       */
                      p5.web.widgets.find-first-ancestor:x:/../*/_event?value
                        .email-composer
                      micro.form.serialize:x:/-/*/*?value

                      /*
                       * Making sure we HTML decode the body.
                       */
                      set:x:/@micro.form.serialize/*/body?value
                        p5.html.html-decode:x:/@micro.form.serialize/*/body?value

                      /*
                       * Looping through each attachment specified by user.
                       */
                      for-each:x:/@micro.form.serialize/*/attachment
                        eval-x:x:/+/*/*
                        add:x:/..try/*/sephia.send-email/*/attachments
                          src
                            file:@SEPHIA-USER-ATTACHMENTS/tmp/{0}
                              :x:/@_dp/#?value

                      /*
                       * Invoking Active Event responsible for sending email, passing in arguments
                       * from above serialization invocation.
                       */
                      add:x:/+
                        src:x:/@micro.form.serialize/*(!/attachment!/no-data)
                      sephia.send-email
                        attachments

                      /*
                       * Invoking specified [.onclose] and [.onsend] lambda objects given during creation of widget.
                       */
                      p5.web.widgets.ajax-events.raise:x:/@p5.web.widgets.find-first-ancestor/*/*?value
                        .onsend
                        .onclose

                    catch

                      /*
                       * Oops, displaying error to user in a modal widget.
                       */
                      create-widgets
                        micro.widgets.modal:sephia-error-modal-widget
                          class:micro-modal micro-modal-smaller
                          widgets
                            h3
                              innerValue:Oops!
                            p
                              innerValue:Oops, email could not be sent. Message from system was; '{0}'
                                :x:/../*/catch/*/message?value
                            div
                              class:right
                              widgets
                                button
                                  innerValue:OK
                                  oninit
                                    micro.page.set-focus:x:/../*/_event?value
                                  onclick
                                    delete-widget:sephia-error-modal-widget

                input
                  style:"display:none;"
                  type:file
                  multiple
                  class:sephiaAttachmentFileInput
                  .data-field:no-data
                  .onupload

                    /*
                     * Retrieving the file name and its content, and saving it to user's 
                     * temporary attachment folder.
                     */
                    p5.web.post.get:sephia-file-name
                    p5.web.post.get:sephia-file-content
                    p5.string.decode-base64:x:/-/*?value
                    save-file:@SEPHIA-USER-ATTACHMENTS/tmp/{0}
                      :x:/../*/p5.web.post.get/[0,1]/*?value
                      src:x:/@p5.string.decode-base64?value

                    /*
                     * Creating widget wrapping attachment, first making sure we find main attachment
                     * wrapper widget.
                     */
                    p5.web.widgets.find-first-ancestor-like:x:/../*/_event?value
                      .email-composer
                    p5.web.widgets.find-first:x:/-/*/*?value
                      class:sephia-attachments

                    /*
                     * Creating widget wrapping given attachment, such that it will be automatically serialized
                     * when form is serialized.
                     */
                    create-widget
                      class:sephia-attachment
                      parent:x:/@p5.web.widgets.find-first/*/*?value
                      widgets
                        input
                          type:hidden
                          .data-field:attachment
                          value:x:/../*/p5.web.post.get/[0,1]/*?value
                        button
                          innerValue:x:/../*/p5.web.post.get/[0,1]/*?value
                          onclick

                            /*
                             * Deleting file from tmp folder, and deleting widget wrapping attachment.
                             */
                            p5.web.widgets.get-parent:x:/../*/_event?value
                            micro.form.serialize:x:/-/*/*?value
                            delete-file:@SEPHIA-USER-ATTACHMENTS/tmp/{0}
                              :x:/@micro.form.serialize/*?value
                            delete-widget:x:/@p5.web.widgets.get-parent/*/*?value

                  onchange:"p5.sephia_upload_files(event);"

                button
                  innerValue:Add attachment
                  style:"margin-bottom:0;"
                  onclick:@"document.querySelector('.sephiaAttachmentFileInput').click();return false;"
                button
                  innerValue:Discard
                  style:"margin-bottom:0;"
                  onclick

                    /*
                     * Invoking specified [.onclose] lambda object given during creation of widget.
                     */
                    p5.web.widgets.find-first-ancestor:x:/../*/_event?value
                      .email-composer
                    p5.web.widgets.ajax-events.raise:x:/@p5.web.widgets.find-first-ancestor/*/*?value
                      .onclose
