
/*
 * Returns the MIME type for a file name, in addition to the "Content-Transfer-Encoding".
 *
 * If filename supplied as [_arg] is a non-supported file type, meaning its file extension is not valid for a Sephia attachment,
 * it will return nothing.
 *
 * Notice, if you wish to change the list of supported file types, according to their extensions, this is the place where you'd
 * configure such a thing.
 */
create-event:sephia.get-mime-type

  /*
   * Forward evaluating all [Content-Disposition] and [filename] return args.
   */
  split:x:/../*/_arg?value
    =:/
  eval-x:x:/+/*/*
  add:x:/../**/return/*
    src
      Content-Disposition:@"attachment; filename=""{0}"""
        :x:/@split/0/-?name
      filename:x:/../*/_arg?value

  /*
   * Splitting filename given in [_arg], to figure out its extension.
   */
  split:x:/../*/_arg?value
    =:.
  switch:x:/@split/0/-?name

    /*
     * Text file types.
     */
    case:txt
    case:md
      return
        text:plain

    /*
     * Image file types.
     */
    case:png
      return
        image:png
          Content-Transfer-Encoding:binary
    case:jpg
    case:jpeg
      return
        image:jpeg
          Content-Transfer-Encoding:binary
    case:gif
      return
        image:gif
          Content-Transfer-Encoding:binary
    case:tif
    case:tiff
      return
        image:tiff
          Content-Transfer-Encoding:binary

    /*
     * Audio file types.
     */
    case:mp3
      return
        audio:mpeg3
          Content-Transfer-Encoding:binary
    case:wav
      return
        audio:wav
          Content-Transfer-Encoding:binary
    case:ogg
      return
        audio:ogg
          Content-Transfer-Encoding:binary

    /*
     * Video file types.
     */
    case:mpeg
      return
        video:mpeg
          Content-Transfer-Encoding:binary
    case:ogv
      return
        video:ogg
          Content-Transfer-Encoding:binary

    /*
     * Hyperlambda file types.
     */
    case:hl
      return
        application:x-hyperlambda

    /*
     * PGP keypair file.
     */
    case:asc
      return
        text:plain
