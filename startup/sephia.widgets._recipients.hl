
/*
 * Creates our "recipient" widget.
 */
create-event:sephia.widgets._recipients

  /*
   * Adding us specified recipients.
   */
  join:x:/../*/to/*?name
    sep:", "
  eval-x:x:/+/*/*
  add:x:/../*/return/**/.data-field/=to/.
    src
      value:x:/@join?value

  /*
   * Returning actual recipient widget to caller.
   */
  return
    container
      oninit
        sephia.contacts._changed:x:/../*/_event?value
      class:row
      widgets
        div
          class:col-50 strip fill
          widgets
            input
              type:text
              .data-field:to
              .recipient
              onchange

                /*
                 * Since our recipient list has potentiall changed, we might have to change background of
                 * main reply widget, to signify whether or not email can be sent encrypted or not.
                 */
                sephia.contacts._changed:x:/../*/_event?value

            button
              innerValue:To
              onclick

                /*
                 * Shows contacts window, and allows user to select 
                 * a contact to add to recipient list.
                 */
                p5.web.widgets.get-parent:x:/../*/_event?value
                p5.web.widgets.find:x:/-/*/*?value
                  .data-field
                sephia.contacts._find:x:/-/*/*?value

        div
          class:col-25 strip fill
          widgets
            input
              type:text
              .data-field:cc
              .recipient
              onchange

                /*
                 * Since our recipient list has potentiall changed, we might have to change background of
                 * main reply widget, to signify whether or not email can be sent encrypted or not.
                 */
                sephia.contacts._changed:x:/../*/_event?value

            button
              innerValue:Cc
              onclick

                /*
                 * Shows contacts window, and allows user to select 
                 * a contact to add to recipient list.
                 */
                p5.web.widgets.get-parent:x:/../*/_event?value
                p5.web.widgets.find:x:/-/*/*?value
                  .data-field
                sephia.contacts._find:x:/-/*/*?value
        div
          class:col-25 strip fill
          widgets
            input
              type:text
              .data-field:bcc
              .recipient
              onchange

                /*
                 * Since our recipient list has potentiall changed, we might have to change background of
                 * main reply widget, to signify whether or not email can be sent encrypted or not.
                 */
                sephia.contacts._changed:x:/../*/_event?value

            button
              innerValue:Bc
              onclick

                /*
                 * Shows contacts window, and allows user to select 
                 * a contact to add to recipient list.
                 */
                p5.web.widgets.get-parent:x:/../*/_event?value
                p5.web.widgets.find:x:/-/*/*?value
                  .data-field
                sephia.contacts._find:x:/-/*/*?value





/*
 * Common lambda event that shows contacts, and allows user to select
 * email from list of contacts, and add to given [_arg] input widget.
 */
create-event:sephia.contacts._find

  /*
   * Displaying contacts in a modal widget.
   */
  eval-x:x:/+/**/_widget
  create-widgets
    micro.widgets.modal:sephia-select-contact-modal
      .recipients
      class:micro-modal
      widgets

        /*
         * Search textbox wrapper.
         */
        div:sephia-contacts-search-wrapper
          class:right
          .offset:0
          widgets
            div
              class:strip
              style:"display:inline-block;"
              widgets
                input:sephia-select-contact-filter
                  type:text
                  placeholder:Search ...
                  onkeydown:@"if (event.keyCode == 13) {p5.$('sephia-search-contacts-button').raise('onclick');return false;} else if (event.keyCode == 27) {p5.$('sephia-search-contacts-close-btn').raise('onclick');return false;}"
                  oninit

                    /*
                     * Setting initial focus to textbox.
                     */
                    micro.page.set-focus:x:/../*/_event?value

                button:sephia-search-contacts-button
                  innerValue:Search
                  onclick

                    /*
                     * Retrieving search filter condition, and re-databinding grid.
                     */
                    get-widget-property:sephia-select-contact-filter
                      value
                    eval-x:x:/+/*
                    sephia.contacts.find.databind
                      filter:x:/@get-widget-property/*/*?value
                    micro.page.set-focus:sephia-select-contact-filter

                    /*
                     * Making sure we reset "offset".
                     */
                    set-widget-property:sephia-contacts-search-wrapper
                      .offset:0

                button
                  innerValue:&lt;
                  onclick

                    /*
                     * Retrieving filter condition and re-databinding contacts, 
                     * subtracting 10 from "offset".
                     */
                    get-widget-property:sephia-contacts-search-wrapper
                      .offset
                    if:x:/-/*/*?value.int
                      =:int:0

                      /*
                       * Already at the beginning of dataset.
                       */
                      return

                    -:x:/@get-widget-property/*/*?value.int
                      _:10
                    set-widget-property:sephia-contacts-search-wrapper
                      .offset:x:/@-?value

                    get-widget-property:sephia-select-contact-filter
                      value
                    eval-x:x:/+/*
                    sephia.contacts.find.databind
                      filter:x:/@get-widget-property/*/*?value
                      offset:x:/@-?value

                button
                  innerValue:&gt;
                  onclick

                    /*
                     * Retrieving filter condition and re-databinding contacts, 
                     * adding 10 from "offset".
                     */
                    get-widget-property:sephia-contacts-search-wrapper
                      .offset
                    +:x:/@get-widget-property/*/*?value.int
                      _:10
                    get-widget-property:sephia-select-contact-filter
                      value
                    eval-x:x:/+/*
                    sephia.contacts.find.databind
                      filter:x:/@get-widget-property/*/*?value
                      offset:x:/@+?value
                    if:x:/-?value
                      set-widget-property:sephia-contacts-search-wrapper
                        .offset:x:/@+?value

        /*
         * Actual datagrid.
         */
        micro.widgets.grid:sephia-select-contact-grid
          class:hover
          oninit

            /*
             * Initially databding grid without any filter.
             */
            sephia.contacts.find.databind

          events

            /*
             * Databinds contacts grid.
             * Optionally pass in [filter].
             */
            sephia.contacts.find.databind
              .defaults
                offset:0
              whoami
              p5.mysql.connect:[sephia]
                p5.mysql.select:@"select name, email from contacts where username = @username and 
(name like @filter or email like @filter) limit 10 offset @offset"
                  @username:x:/@whoami/*/username?value
                  @filter:"%{0}%"
                    :x:/../*/filter?value
                  @offset:x:(/../*/offset|/../*/.defaults/*/offset)/$?value.int

              /*
               * Verifying we actually had a result.
               */
              if:x:/@p5.mysql.connect/*/p5.mysql.select/*?count
                =:int:0

                /*
                 * No result, returning early.
                 */
                return:bool:false

              add:x:/+2
                src:x:/@p5.mysql.connect/*/p5.mysql.select/*
              add:x:/+/*
                src
                  .row
                    onclick

                      /*
                       * Fetching email from innerValue on "td" element, and adding it to specified widget [_arg]
                       * during creation of grid.
                       */
                      _widget:x:/../*/_arg?value
                      p5.web.widgets.get-children:x:/../*/_event?value
                      get-widget-property:x:/-/0/1?value
                        innerValue
                      get-widget-property:x:/@_widget?value
                        value
                      _content
                      set:x:/@_content?value
                        src:"{0}, {1}"
                          :x:/../*/get-widget-property/[1,2]/*/*?value
                          :x:/../*/get-widget-property/[0,1]/*/*?value
                      trim:x:/@_content?value
                        chars:", "
                      set-widget-property:x:/@_widget?value
                        value:x:/@trim?value
                      delete-widget:sephia-select-contact-modal
                      micro.page.set-focus:x:/@_widget?value
                      p5.web.widgets.ajax-events.raise:x:/@_widget?value
                        onchange

              micro.widgets.grid.databind:sephia-select-contact-grid
              return:bool:true

        div
          class:right air-top
          widgets
            button:sephia-search-contacts-close-btn
              innerValue:Close
              onclick
                p5.web.widgets.find-first-ancestor:x:/../*/_event?value
                  .recipients
                delete-widget:x:/-/*/*?value





/*
 * Given a widget as [_arg], will find all recipients of email, 
 * and verify that email can be sent encrypted or not, and modify background
 * of email composer accordingly.
 */
create-event:sephia.contacts._changed

  /*
   * Finding root ancestor, and all recipient input elements beneath, and figuring out all
   * emails we've currently got in our list of recipients (all field, To, Cc and Bcc).
   */
  p5.web.widgets.find-first-ancestor-like:x:/../*/_arg?value
    .email-composer
  p5.web.widgets.find:x:/-/*/*?value
    .recipient
  get-widget-property:x:/-/*/*?value
    value
  if:x:/-/*/*?value
    =:

    /*
     * There is no text in any of the recipients textbox input fields.
     * Defaulting to "success".
     */
    get-widget-property:x:/@p5.web.widgets.find-first-ancestor-like/*/*?value
      class
    if:x:/-/*/*?value
      !~:success
      micro.css.toggle:x:/@p5.web.widgets.find-first-ancestor-like/*/*?value
        class:success
    if:x:/-/*/*?value
      ~:warning
      micro.css.toggle:x:/@p5.web.widgets.find-first-ancestor-like/*/*?value
        class:warning
    return

  join:x:/@get-widget-property/*/*?value
    sep:,
  trim:x:/-?value
    chars:,
  split:x:/-?value
    =:,
    =:" "

  /*
   * Checking if all recipients have a public PGP key.
   */
  p5.crypto.list-public-keys:x:/-/*?name
  if:x:/-/*?count
    =:x:/@split/*/$?count
    or:x:/@split/*/$?count
      =:int:0

    /*
     * We have public PGP keys for all recipients.
     */
    get-widget-property:x:/@p5.web.widgets.find-first-ancestor-like/*/*?value
      class
    if:x:/-/*/*?value
      !~:success
      micro.css.toggle:x:/@p5.web.widgets.find-first-ancestor-like/*/*?value
        class:success warning

  else

    /*
     * We do not have public PGP keys for all recipients.
     */
    get-widget-property:x:/@p5.web.widgets.find-first-ancestor-like/*/*?value
      class
    if:x:/-/*/*?value
      ~:success
      micro.css.toggle:x:/@p5.web.widgets.find-first-ancestor-like/*/*?value
        class:success warning
