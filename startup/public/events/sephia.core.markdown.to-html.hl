
/*
 * Creates standard email HTML from the given [_arg] Markdown content.
 *
 * This implies among other things, wrapping the signature of your email into a <pre></pre> HTML snippet,
 * making all URLs become hyperlinks, in addition to converting the content of email to HTML by assuming it's Markdown.
 */
create-event:sephia.core.markdown.to-html

  /*
   * Sanity checking invocation.
   */
  micro.lambda.contract.min:x:/..
    _arg:string

  /*
   * Splitting up signature, such that we can have it displayed as pre-formatted.
   */
  split:x:/../*/_arg?value
    =:"\r\n-- \r\n"

  /*
   * Converting content of email (minus signature) to Markdown.
   */
  markdown2html:x:/-/0?name

  /*
   * Converting all hyperlinks within email that are not explicitly set to hyperlinks to such.
   * Notice, this invocation will ignore any hyperlinks already created by our above [markdown2html] invocation.
   */
  sephia._internals.html.create-hyperlinks:x:/@markdown2html?value

  /*
   * Checking if user actually had a signature in his email.
   */
  if:x:/@split/*?count
    =:int:1

    /*
     * User didn't have any signature, returning raw markdown with hyperlink conversion,
     * making sure we "braid it" into our "wrapper HTML" template.
     */
    sephia._internals.markdown-to-html.wrap:x:/@sephia._internals.html.create-hyperlinks?value
    return:x:/-?value

  /*
   * Converting URLs in signature to real hyperlinks.
   */
  sephia._internals.html.create-hyperlinks:x:/@split/0/-?name

  /*
   * User had a signature.
   *
   * Returning both Markdown and signature as pre-formatted,
   * making sure we "braid" everything inside our "wrapper HTML" template.
   */
  sephia._internals.markdown-to-html.wrap:"{0}\r\n<pre style=\"opacity:.3;\">-- \r\n{1}</pre>"
    :x:/../*/sephia._internals.html.create-hyperlinks/[0,1]?value
    :x:/../*/sephia._internals.html.create-hyperlinks/[1,2]?value
  return:x:/-?value
