
/*
 * File responsible for starting Sephia Five, which means creating the main widget, 
 * and wire frame for displaying inbox etc.
 *
 * Notice, it will first force the user to setup his POP3 and SMTP settings, unless
 * he has already done so.
 */


/*
 * Checking if user is attempting to download a file, such as an attachment etc.
 *
 * When the user tries to download an attachment, the attachment he tries to download,
 * will be stored in a session variable, and the page will be reloaded.
 * Here we check for that session variable, and if it exist, we simply serve that file,
 * for then to delete the session variable.
 */
p5.web.session.get:sephia.core.file-download
if:x:/@p5.web.session.get/*/*

  /*
   * User has requested to download a file.
   *
   * Deleting session variable, echoing file, and returning early, 
   * making sure we get the HTTP "Content-Disposition" header correctly.
   */
  p5.web.header.set:Content-Disposition
    src:@"attachment; filename=""{0}"""
      :x:/@p5.web.session.get/*/*/*/filename?value
  p5.web.session.set:sephia.core.file-download
  p5.web.echo-file:{0}{1}{2}
    :x:/@p5.web.session.get/*/*/*/folder?value
    :x:/@p5.web.session.get/*/*/*/prefix?value
    :x:/@p5.web.session.get/*/*/*/filename?value
  return


/*
 * Including Micro, with Serious skin, and adding Awesome Fonts.
 */
p5.web.include-css-file:@MICRO/media/main.css
p5.web.include-css-file:@MICRO/media/ext.css
p5.web.include-css-file:@MICRO/media/fonts.css
p5.web.include-css-file:@MICRO/media/skins/serious.css





/*
 * Including main CSS file for Sephia.
 */
p5.web.include-css-file:@SEPHIA/media/main.css





/*
 * Making sure user has an attachment folder.
 *
 * The first time the user opens Sephia, it will automatically create the user's
 * attachment folder, in addition to a temporary folder where uploaded attachments will
 * be temporary stored, before the email is sent.
 *
 * Every time the user starts Sephia, this temporary attachment folder will be emptied.
 */
if
  fetch:x:/0/0?value
    folder-exists:@SEPHIA-USER-ATTACHMENTS/
  not

  /*
   * Creating attachments folders, the "/tmp/" guy is for temporary attachments,
   * for instance attachments uploaded during composing an email, that still haven't
   * been sent, etc.
   */
  create-folder:@SEPHIA-USER-ATTACHMENTS/
  create-folder:@SEPHIA-USER-ATTACHMENTS/tmp/

else

  /*
   * Making sure we delete all file in temporary attachment folder.
   */
  list-files:@SEPHIA-USER-ATTACHMENTS/tmp/
  delete-file:x:/-/*?name





/*
 * Clearing out anything previously added to page, to make sure we start
 * out Sephia with a blank slate.
 */
clear-widget:cnt
delete-widget-property:cnt
  class





/*
 * Creating main content container.
 *
 * This is the place where "everything" is stored in Sephia, and is used to display
 * the inbox, Sephia's settings, emails the user is reading, etc, etc, etc.
 *
 * Notice, we only use one "container" widget from Micro for everything related to Sephia.
 */
create-container-widget:sephia-main-container
  class:container





/*
 * Retrieving user's settings, and making sure user has setup his account(s).
 *
 * Notice, if user hasn't setup his account(s), we won't allow him to open his inbox,
 * but force him through setting up his settings, such as POP3, SMTP, PGP settings, etc.
 */
p5.auth.my-settings.get
if:x:/@p5.auth.my-settings.get/*/sephia
  not

  /*
   * User has no settings, displaying settings form, and returning early.
   */
  create-widget
    parent:sephia-main-container
    widgets
      div
        class:row air-top
        widgets
          div
            class:col
            widgets
              sephia._internals.widgets.settings

  /*
   * Returning early to avoid evaluating the rest of this file.
   */
  return





/*
 * Making sure we start email fetching thread.
 *
 * This will create a thread for each user, that runs in the background,
 * and constantly pulls new emails from the user's POP3 server.
 */
load-file:@SEPHIA/core/create-pop3-user-thread.hl
eval:x:/-/*





/*
 * Creating inbox widget.
 */
load-file:@SEPHIA/inbox/create-inbox.hl
eval:x:/-/*





/*
 * Creates widget that constantly polls server every n'th second to
 * check if new emails have arrived.
 */
load-file:@SEPHIA/core/create-client-server-poller.hl
eval:x:/-/*
