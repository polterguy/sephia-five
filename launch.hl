
/*
 * File responsible for starting Sephia Five, which means creating main widget, 
 * and wire frame for displaying inbox etc.
 */


/*
 * Checking if user is attempting to download a file, such as an attachment etc.
 */
p5.web.session.get:sephia.core.file-download
if:x:/@p5.web.session.get/*/*

  /*
   * Deleting session variable, echoing file, and returning early, 
   * making sure we get the HTTP headers correctly.
   */
  p5.web.header.set:Content-Disposition
    src:@"attachment; filename=""{0}"""
      :x:/@p5.web.session.get/*/*/*/filename?value
  p5.web.session.set:sephia.core.file-download
  p5.web.echo-file:{0}{1}{2}
    :x:/@p5.web.session.get/*/*/*/folder?value
    :x:/@p5.web.session.get/*/*/*/prefix?value
    :x:/@p5.web.session.get/*/*/*/filename?value
  return


/*
 * Including Micro, with Serious skin and adding Awesome Fonts.
 */
p5.web.include-css-file:@MICRO/media/main.css
p5.web.include-css-file:@MICRO/media/ext.css
p5.web.include-css-file:@MICRO/media/fonts.css
p5.web.include-css-file:@MICRO/media/skins/serious.css





/*
 * Including main CSS file for Sephia.
 */
p5.web.include-css-file:@SEPHIA/media/main.css





/*
 * Making sure user has an attachment folder.
 */
if
  fetch:x:/0/0?value
    folder-exists:@SEPHIA-USER-ATTACHMENTS/
  not

  /*
   * Creating attachments folders, the "/tmp/" guy is for temporary attachments,
   * for instance attachments uploaded during composing an email, that still haven't
   * been sent, etc.
   */
  create-folder:@SEPHIA-USER-ATTACHMENTS/
  create-folder:@SEPHIA-USER-ATTACHMENTS/tmp/

else

  /*
   * Making sure we delete all file in temporary attachment folder.
   */
  list-files:@SEPHIA-USER-ATTACHMENTS/tmp/
  delete-file:x:/-/*?name





/*
 * Clearing out anything previously added to page.
 */
clear-widget:cnt
delete-widget-property:cnt
  class





/*
 * Creating main content container.
 */
create-container-widget:sephia-main-container
  class:container





/*
 * Retrieving user's settings, and making sure user has setup his account(s).
 * Notice, if user hasn't setup his account(s), we refuse him to open his inbox (for obvious reasons).
 */
p5.auth.my-settings.get
if:x:/@p5.auth.my-settings.get/*/sephia
  not

  /*
   * User has no settings, displaying settings form, and returning early.
   * Making sure we hide main menu widget.
   */
  create-widget:initial-settings
    parent:sephia-main-container
    widgets
      div
        class:row air-top
        widgets
          div
            class:col
            widgets
              sephia.widgets._settings
  return





/*
 * Making sure we start email fetching thread.
 *
 * This will create a thread for each user, that runs in the background,
 * and constantly pulls new emails from the user's POP3 server.
 */
load-file:@SEPHIA/core/fetch-emails.hl
eval:x:/-/*





/*
 * Opening inbox.
 */
load-file:@SEPHIA/inbox/show.hl
eval:x:/-/*





/*
 * Creates widget that constantly polls server every n'th second to
 * check if new emails have arrived.
 */
load-file:@SEPHIA/core/start-poller.hl
eval:x:/-/*
