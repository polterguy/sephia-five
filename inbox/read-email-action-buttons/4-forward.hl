
/*
 * Action button for replying to email
 */
button
  innerValue:@"<span class=""icon-mail-forward""></span>"
  title:Forward email
  class:reader-action-button
  oninit

    /*
     * Figuring out the ID of our email, such that we can figure out what type 
     * of email this is.
     */
    p5.web.widgets.find-first-ancestor:x:/../*/_event?value
      .email-id
    get-widget-property:x:/@p5.web.widgets.find-first-ancestor/*/*?value
      .email-id

    /*
     * Connecting to database, to retrieve type of email, and act accordingly.
     */
    p5.mysql.connect:[sephia]

      /*
       * Figuring out what type of email this is.
       */
      p5.mysql.scalar:@"select type from emails where emails.id = @id"
        @id:x:/@get-widget-property/*/*?value
      if:x:/@p5.mysql.scalar?value
        =:spam

        /*
         * This is spam, hence we hide the button.
         *
         * Hint, if user wants to forward the email, he'll first need to move 
         * it out of his spam folder.
         */
        set-widget-property:x:/../*/_event?value
          visible:false

  onclick

    /*
     * Finding currently read email, to make sure we're able to inject
     * reply widget into page just beneath reader widget, before we delete
     * the reader widget itself.
     */
    p5.web.widgets.find-first-ancestor:x:/../*/_event?value
      .email-id
    get-widget-property:x:/-/*/*?value
      .email-id

    /*
     * Getting settings for user.
     */
    p5.auth.my-settings.get

    /*
     * Getting "reply data" for email.
     */
    sephia._internals.get-response-email-data:x:/@get-widget-property/*/*?value
      is-forward:bool:true
      attachments:bool:true
    add:x:/../*/create-widget/**/sephia.widgets.compose-email
      src:x:/@sephia._internals.get-response-email-data/*/attachment

    /*
     * Creating actual reply widget.
     */
    eval-x:x:/+/**/sephia.widgets.compose-email/*
    create-widget
      after:x:/@p5.web.widgets.find-first-ancestor/*/*?value
      class:row air-top
      .email-id:x:/@get-widget-property/*/*?value
      widgets
        div
          class:col
          widgets

            /*
             * This is the actual "composer" widget, which allows user to compose/reply/etc an email.
             */
            sephia.widgets.compose-email
              subject:x:/@sephia._internals.get-response-email-data/*/subject?value
              body:x:/@sephia._internals.get-response-email-data/*/content?value
              recipients
              class:air-inner shaded rounded
              .onclose

                /*
                 * Simply deleting main wrapper widget.
                 */
                p5.web.widgets.find-first-ancestor:x:/../*/_event?value
                  .email-id
                delete-widget:x:/-/*/*?value
