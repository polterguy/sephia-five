
/*
 * Action button for replying to email
 */
button
  innerValue:@"<span class=""icon-mail-reply""></span>"
  title:Reply to email
  class:reader-action-button
  oninit

    /*
     * Figuring out ID of email we're reading, to make sure we hide this button, in case the
     * email was sent by the user himself (in "outbox" that is).
     */
    p5.web.widgets.find-first-ancestor:x:/../*/_event?value
      .email-id
    get-widget-property:x:/-/*/*?value
      .email-id

    /*
     * Selecting email data from MySQL.
     */
    p5.mysql.connect:[sephia]

      /*
       * Checking if email was sent by user.
       */
      p5.mysql.scalar:@"select type from emails where emails.id = @id"
        @id:x:/@get-widget-property/*/*?value
      if:x:/@p5.mysql.scalar?value
        =:sent

        /*
         * This email was sent by user himself, and hence replying to it makes no sense.
         */
        set-widget-property:x:/../*/_event?value
          visible:false

  onclick

    /*
     * Finding currently read email, to make sure we're able to inject
     * reply widget into page just beneath reader widget, before we delete
     * the reader widget itself.
     */
    p5.web.widgets.find-first-ancestor:x:/../*/_event?value
      .email-id
    get-widget-property:x:/-/*/*?value
      .email-id

    /*
     * Getting "reply data" for email.
     */
    sephia._internals.get-reply-data:x:/@get-widget-property/*/*?value

    /*
     * Creating our reply widget.
     */
    add:x:/../*/micro.evaluate.file
      src:x:/@sephia._internals.get-reply-data/*
    eval-x:x:/+/*
    micro.evaluate.file:@SEPHIA/inbox/read-email-action-buttons/common/create-reply-widget.hl
      id:x:/@get-widget-property/*/*?value
      reader-widget:x:/@p5.web.widgets.find-first-ancestor/*/*?value
