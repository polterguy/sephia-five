
/*
 * Shows our inbox for Sephia Five
 */





/*
 * Clearing main container.
 */
clear-widget:sephia-main-container





/*
 * Checking if user likes to compose emails using Markdown
 */
p5.auth.my-settings.get
if:x:/@p5.auth.my-settings.get/*/sephia/*/markdown-composer
  add:x:/../*/create-widget/**/sephia.widgets.compose-email
    src
      markdown-composer:bool:true





/*
 * Creating filtering and paging widget toolbar at top of page.
 */
create-widget:sephia-search-wrapper
  parent:sephia-main-container
  .offset:0
  class:row
  events

    /*
     * Re-databinds inbox, setting [filter] and [offset] to zero and blank.
     *
     * If you supply [keep-page-filter] and set its value to true, then existing [filter] and [offset]
     * will be kept as is, and used to re-databind grid.
     */
    sephia.inbox.open

      /*
       * Making sure we clean out notification viewstate variable, such that when user gets new
       * emails, he'll be notified.
       */
      p5.web.viewstate.set:sephia.core.has-notified-user-of-new-emails

      /*
       * Checking if caller requested that current page and filter should be kept.
       */
      if:x:/../*/keep-page-filter?value

        /*
         * Retrieving paging [offset] and [filter] before re-databinding grid again.
         */
        get-widget-property:x:/../*/_event?value
          .offset
        get-widget-property:sephia-search-txt
          value
        load-file:@SEPHIA/inbox/databind-inbox.hl
        eval-x:x:/+/*
        eval:x:/-2/*
          offset:x:/..if/*/get-widget-property/[0,1]/*/*?value
          filter:x:/..if/*/get-widget-property/[1,2]/*/*?value

      else

        /*
         * Setting paging [offset] to zero and [filter] to "",
         * before re-databinding grid again.
         */
        set-widget-property:x:/../*/_event?value
          .offset:0
        set-widget-property:sephia-search-txt
          value:
        load-file:@SEPHIA/inbox/databind-inbox.hl
        eval:x:/-/*

  widgets
    div
      class:col right
      widgets
        div
          class:strip
          style:"display:inline-block;"
          widgets

            /*
             * Text input for allowing user to search emails.
             */
            input:sephia-search-txt
              type:text
              class:smaller
              placeholder:"inbox:"
              title:@"Use 'inbox:', 'sent:', 'read:', 'unread:', 'safe:' and 'attachment:' to specify type of emails to search for"
              onkeydown:@"if (event.keyCode == 13) {p5.$('sephia-search-btn').raise('onclick');return false;}"

            /*
             * Button to search inbox.
             */
            literal:sephia-search-btn
              element:button
              innerValue:@"<span class=""icon-search""></span>"
              title:Search inbox
              onclick

                /*
                 * Retrieving filter condition and re-databinding inbox.
                 */
                get-widget-property:sephia-search-txt
                  value
                load-file:@SEPHIA/inbox/databind-inbox.hl
                eval-x:x:/+/*
                eval:x:/-2/*
                  filter:x:/@get-widget-property/*/*?value

                /*
                 * Making sure we set focus to search textbox.
                 */
                micro.page.set-focus:sephia-search-txt

                /*
                 * Making sure we reset "offset".
                 */
                set-widget-property:sephia-search-wrapper
                  .offset:0

            /*
             * Button to page to previous page.
             */
            button
              innerValue:@"<span class=""icon-chevron-left""></span>"
              title:Previous page
              onclick

                /*
                 * Retrieving filter condition and re-databinding inbox, 
                 * subtracting 15 from "offset".
                 */
                get-widget-property:sephia-search-wrapper
                  .offset
                if:x:/-/*/*?value.int
                  =:int:0

                  /*
                   * Already at the beginning of dataset.
                   */
                  return

                -:x:/@get-widget-property/*/*?value.int
                  _:15
                set-widget-property:sephia-search-wrapper
                  .offset:x:/@-?value

                get-widget-property:sephia-search-txt
                  value
                load-file:@SEPHIA/inbox/databind-inbox.hl
                eval-x:x:/+/*
                eval:x:/-2/*
                  filter:x:/@get-widget-property/*/*?value
                  offset:x:/@-?value


            /*
             * Button to page to next page.
             */
            button
              innerValue:@"<span class=""icon-chevron-right""></span>"
              title:Next page
              onclick

                /*
                 * Retrieving filter condition and re-databinding inbox, 
                 * adding 15 from "offset".
                 */
                get-widget-property:sephia-search-wrapper
                  .offset
                +:x:/@get-widget-property/*/*?value.int
                  _:15
                get-widget-property:sephia-search-txt
                  value
                load-file:@SEPHIA/inbox/databind-inbox.hl
                eval-x:x:/+/*
                eval:x:/-2/*
                  filter:x:/@get-widget-property/*/*?value
                  offset:x:/@+?value
                if:x:/-?value
                  set-widget-property:sephia-search-wrapper
                    .offset:x:/@+?value


            /*
             * Button to reload inbox starting from first page.
             */
            button
              innerValue:@"<span class=""icon-home""></span>"
              title:Open inbox again from beginning
              onclick

                /*
                 * Refreshing inbox, and makes sure we have a "fetch emails from POP3 server worker thread".
                 *
                 * The latter we do, since sometimes an error is created in the POP3 worker thread, which user
                 * might choose to avoid clicking "Resolve" for, at which point the worker POP3 thread is
                 * simply stopped and not restarted, while user for instance goes through his settings, etc.
                 *
                 * Since the "create-pop3-user-thread.hl" file will make sure there only exists one thread for each user, this
                 * has no negative consequences if the thread already exists.
                 */
                sephia.inbox.open
                load-file:@SEPHIA/core/create-pop3-user-thread.hl
                eval:x:/-/*


            /*
             * Button to open settings.
             */
            button
              innerValue:@"<span class=""icon-wrench""></span>"
              title:Opens settings
              onclick

                /*
                 * Clearing out everything in main container widget of app.
                 */
                clear-widget:sephia-main-container

                /*
                 * Opening up settings.
                 */
                create-widget
                  parent:sephia-main-container
                  widgets
                    div
                      class:row air-top
                      widgets
                        div
                          class:col
                          widgets
                            sephia._internals.widgets.settings


            /*
             * Button to log out of Sephia.
             */
            button
              innerValue:@"<span class=""icon-key""></span>"
              title:Log out of Sephia
              onclick

                /*
                 * Signing out of Sephia, making sure we clean up before we do.
                 */
                list-files:@SEPHIA-USER-ATTACHMENTS/tmp/
                delete-files:x:/-/*?name
                logout
                p5.web.reload-location

            /*
             * Button to compose a new email.
             */
            literal
              element:button
              style:"padding-left:35px;padding-right:35px;"
              innerValue:@"<span class=""icon-envelope""></span>"
              title:Compose new email
              onclick

                /*
                 * Creating a new "composer" widget to allow user to compose a new email.
                 */
                create-widget
                  parent:sephia-main-container
                  class:row air-top
                  .email-id:none
                  widgets
                    div
                      class:col
                      widgets

                        /*
                         * This is the actual "composer" widget, which allows user to compose/reply/etc an email.
                         *
                         * Notice, we instantiate it such that it will send also an HTML view, created by converting
                         * its content from Markdown to HTML.
                         */
                        sephia.widgets.compose-email
                          .onclose

                            /*
                             * Simply deleting main wrapper widget.
                             */
                            p5.web.widgets.find-first-ancestor:x:/../*/_event?value
                              .email-id
                            delete-widget:x:/-/*/*?value

                          .onsend

                            /*
                             * Notifying user.
                             */
                            micro.windows.info:Email was successfully sent





/*
 * Creating actual inbox datagrid widget.
 */
create-widget
  parent:sephia-main-container
  class:row
  widgets
    div
      class:col
      widgets
        micro.widgets.grid:sephia-inbox
          class:hover sephia-inbox





/*
 * Databinding grid.
 */
load-file:@SEPHIA/inbox/databind-inbox.hl
eval:x:/-/*





/*
 * Updating email count.
 */
load-file:@SEPHIA/inbox/update-page-title.hl
eval:x:/-/*
