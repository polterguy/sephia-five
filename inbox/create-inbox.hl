﻿
/*
 * Shows our inbox for Sephia Five
 */





/*
 * Clearing main container.
 */
clear-widget:sephia-main-container





/*
 * Creating filtering and paging widget toolbar at top of page.
 */
create-widget:sephia-search-wrapper
  parent:sephia-main-container
  .offset:0
  class:row
  events

    /*
     * Re-databinds inbox, setting [filter] and [offset] to zero and blank.
     *
     * If you supply [keep-page-filter] and set its value to true, then the 
     * existing [filter] and [offset] will be kept as is, and used to re-databind grid.
     */
    sephia.inbox.databind

      /*
       * Checking if caller requested that current page and filter should be kept.
       */
      if:x:/../*/keep-page-filter?value

        /*
         * Retrieving paging [offset] and [filter] before re-databinding grid again.
         */
        get-widget-property:x:/../*/_event?value
          .offset
        get-widget-property:sephia-search-txt
          value
        eval-x:x:/+/*
        micro.evaluate.file:@SEPHIA/inbox/databind-inbox.hl
          offset:x:/..if/*/get-widget-property/[0,1]/*/*?value
          filter:x:/..if/*/get-widget-property/[1,2]/*/*?value

      else

        /*
         * Setting paging [offset] to zero and [filter] to "",
         * before re-databinding grid again.
         */
        .defaults
          filter:
          offset:int:0
        set-widget-property:x:/../*/_event?value
          .offset:x:(/../*/offset|/@.defaults/*/offset)/$?value
        set-widget-property:sephia-search-txt
          value:x:(/../*/filter|/@.defaults/*/filter)/$?value

        /*
         * Adding any (optional) filters and/or offsets
         */
        add:x:/./*/micro.evaluate.file
          src:x:/../*(/filter|/offset)

        /*
         * Databinding inbox by evaluating file responsible for databinding it.
         */
        micro.evaluate.file:@SEPHIA/inbox/databind-inbox.hl

  widgets
    div:sephia-search-toolbar-wrapper
      class:sephia-search-toolbar col-70 right
      widgets
        div
          class:strip fill
          widgets

            /*
             * Text input for allowing user to search emails.
             */
            input:sephia-search-txt
              type:text
              class:smaller
              placeholder:"inbox:"
              title:@"Use 'inbox:', 'sent:', 'read:', 'unread:', 'safe:', 'all:', 'spam:' and 'attachment:' to specify type of emails to search for"
              onkeydown:@"if (event.keyCode == 13) {p5.$('sephia-search-btn').raise('onclick');return false;}"

            /*
             * Button to search inbox.
             */
            literal:sephia-search-btn
              element:button
              innerValue:@"<span class=""icon-search""></span>"
              title:Search inbox
              onclick

                /*
                 * Retrieving filter condition and re-databinding inbox.
                 */
                get-widget-property:sephia-search-txt
                  value
                eval-x:x:/+/*
                sephia.inbox.databind
                  filter:x:/@get-widget-property/*/*?value

                /*
                 * Making sure we set focus to search textbox.
                 */
                micro.page.set-focus:sephia-search-txt

            /*
             * Button to page to previous page.
             */
            button
              innerValue:@"<span class=""icon-chevron-left""></span>"
              title:Previous page
              accesskey:P
              onclick

                /*
                 * Retrieving filter condition and re-databinding inbox, 
                 * subtracting 15 from "offset".
                 */
                get-widget-property:sephia-search-wrapper
                  .offset
                if:x:/-/*/*?value.int
                  =:int:0

                  /*
                   * Already at the beginning of dataset.
                   */
                  return

                -:x:/@get-widget-property/*/*?value.int
                  _:15
                set-widget-property:sephia-search-wrapper
                  .offset:x:/@-?value

                get-widget-property:sephia-search-txt
                  value
                eval-x:x:/+/*
                sephia.inbox.databind
                  filter:x:/@get-widget-property/*/*?value
                  offset:x:/@-?value

            /*
             * Button to page to next page.
             */
            button
              innerValue:@"<span class=""icon-chevron-right""></span>"
              title:Next page
              accesskey:N
              onclick

                /*
                 * Retrieving filter condition and re-databinding inbox, 
                 * adding 15 from "offset".
                 */
                get-widget-property:sephia-search-wrapper
                  .offset
                +:x:/@get-widget-property/*/*?value.int
                  _:15
                get-widget-property:sephia-search-txt
                  value
                eval-x:x:/+/*
                sephia.inbox.databind
                  filter:x:/@get-widget-property/*/*?value
                  offset:x:/@+?value
                if:x:/-?value
                  set-widget-property:sephia-search-wrapper
                    .offset:x:/@+?value

            /*
             * Button that clears search, and opens email inbox from the beginning.
             */
            button
              innerValue:@"<span class=""icon-home""></span>"
              title:Open inbox
              accesskey:O
              onclick

                /*
                 * Clears out any search queries, resets pager, and opens up inbox from beginning.
                 */
                sephia.inbox.databind

                /*
                 * Deleting any potential "error signal objects", making sure we've got synchronized access
                 * to signal object.
                 */
                whoami

                /*
                 * Checking if we have some error signal objects.
                 */
                select-data:x:/*/*/sephia.core.thread-signal-{0}/*/error
                  :x:/@whoami/*/username?value
                if:x:/-/*

                  /*
                   * Deleting "error signal object", making sure we've got synchronized access.
                   */
                  write-lock:sephia.core.thread-signal-{0}
                    :x:/@whoami/*/username?value
                    delete-data:x:/*/*/sephia.core.thread-signal-{0}/*/error/.
                      :x:/@whoami/*/username?value

                /*
                 * Creating a new POP3 fetcher thread.
                 *
                 * Notice, if we already have another fetcher thread, or if user is only allowed
                 * to check his emails on a specific times of the day, doesn't matter, since
                 * the invocation will return before it creates a new thread, and no new thread 
                 * will be created.
                 */
                sephia._internals.create-pop3-user-thread

                /*
                 * Making sure we update email count, in case we've had new emails.
                 */
                sephia._internals.update-page-title

            /*
             * Button to open settings.
             */
            button
              innerValue:@"<span class=""icon-wrench""></span>"
              title:Opens settings
              accesskey:S
              onclick

                /*
                 * Clearing out everything in main container widget of app.
                 */
                clear-widget:sephia-main-container

                /*
                 * Opening up settings.
                 */
                create-widget
                  parent:sephia-main-container
                  widgets
                    div
                      class:row air-top
                      widgets
                        div
                          class:col
                          widgets
                            sephia._internals.widgets.settings

            /*
             * Button to log out of Sephia.
             */
            button
              innerValue:@"<span class=""icon-key""></span>"
              title:Log out of Sephia
              accesskey:L
              onclick

                /*
                 * Signing out of Sephia, making sure we clean up before we do.
                 */
                list-files:@SEPHIA-USER-ATTACHMENTS/tmp/
                delete-files:x:/-/*?name
                logout
                p5.web.reload-location

    div
      class:col
      widgets
        div
          class:strip right
          style:"float:right;"
          widgets

            /*
             * Button to toggle display of the search toolbar.
             */
            literal
              element:button
              class:sephia-logo-toolbar-button
              innerValue:@"<span></span>"
              title:Toggle Sephia Five Magic toolbar
              accesskey:F
              onclick

                /*
                 * Toggling display CSS class of our search toolbar
                 */
                micro.css.toggle:sephia-search-toolbar-wrapper
                  class:sephia-search-toolbar-show
                micro.page.set-focus:sephia-search-txt

            /*
             * Button to compose a new email.
             */
            literal
              element:button
              style:"padding-left:45px;padding-right:45px;"
              innerValue:@"<span class=""icon-envelope""></span>"
              title:Compose new email
              accesskey:C
              onclick

                /*
                 * Creating a new "composer" widget to allow user to compose a new email.
                 */
                create-widget
                  parent:sephia-main-container
                  class:row air-top
                  .email-id:none
                  widgets
                    div
                      class:col
                      widgets

                        /*
                         * This is the widget that actually allows user to compose an email.
                         */
                        sephia.widgets.compose-email
                          .onclose

                            /*
                             * Simply deleting main wrapper widget.
                             */
                            p5.web.widgets.find-first-ancestor:x:/../*/_event?value
                              .email-id
                            delete-widget:x:/-/*/*?value

                /*
                 * Making sure we scroll composer into view.
                 */
                p5.web.send-javascript:@"p5.$('{0}').el.scrollIntoView(true);"
                  :x:/@create-widget?value





/*
 * Creating actual inbox datagrid widget.
 */
create-widget
  parent:sephia-main-container
  class:row
  widgets
    div
      class:col
      widgets
        micro.widgets.grid:sephia-inbox
          class:hover sephia-inbox





/*
 * Databinding grid.
 */
sephia.inbox.databind





/*
 * Updating email count.
 */
sephia._internals.update-page-title
