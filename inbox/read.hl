
/*
 * Reads a single email.
 * Expects [id] being email id to read.
 */


/*
 * Checking if email is already opened in another widget.
 */
p5.web.widgets.find:sephia-main-container
  .email-id:x:/../*/id?value
if:x:/-/*/*?value

  /*
   * Another widget is already showing this email, returning early.
   */
  return


/*
 * Opens database and selects data for email.
 */
p5.mysql.connect:[sephia]

  /*
   * Fetching attachments for email, and appending as buttons to email reader, which once
   * clicked will download the attachment.
   */
  p5.mysql.select:@"select * from attachments where emailid = @id"
    @id:x:/../*/id?value
  for-each:x:/@p5.mysql.select/*

    /*
     * Checking if this is a legal attachment.
     */
    eval-x:x:/+/*
    sephia.core._get-mime-type
      filename:x:/@_dp/#/*/filename?value
      prefix:x:/@_dp/#/*/prefix?value
      folder:x:/@_dp/#/*/folder?value
    if:x:/@sephia.core._get-mime-type/*

      /*
       * Attachment has a legal file extension according to configurtion of Sephia.
       * Adding [onclick] event handler for button, that will download attachment when clicked.
       */
      add:x:/..for-each/*/add/*/src/*/button
        src
          class:sephia-inbox-attachment
          onclick

            /*
             * Setting session variable to filename, and reloading location.
             * The launch.hl file will check for this session variable, and if found, instead
             * of reloading page, it will serve up the file requested.
             */
            get-widget-property:x:/../*/_event?value
              .folder
              .prefix
              .filename
            eval-x:x:/+/*/*/*
            p5.web.session.set:sephia.core.file-download
              src
                file
                  folder:x:/@get-widget-property/*/*/.folder?value
                  prefix:x:/@get-widget-property/*/*/.prefix?value
                  filename:x:/@get-widget-property/*/*/.filename?value
            p5.web.reload-location

    else

      /*
       * Attachment does not have a legal file extension.
       */
      add:x:/..for-each/*/add/*/src/*/button
        src
          class:sephia-inbox-attachment sephia-inbox-illegal-attachment
          onclick
            micro.windows.info:Sorry, these types of attachments are not allowed in Sephia Five
              class:micro-windows-info micro-windows-info-error

    /*
     * Adding button to reader for currently iterated attachment.
     */
    eval-x:x:/+/*/*/*
    add:x:/../*/create-widget/**/widgets/=attachments
      src
        button
          .folder::x:/@_dp/#/*/folder?value
          .prefix::x:/@_dp/#/*/prefix?value
          .filename::x:/@_dp/#/*/filename?value
          innerValue:x:/@_dp/#/*/filename?value

  /*
   * Fetching all recipients for email.
   */
  p5.mysql.select:@"select name, email, type from contacts 
inner join recipients on contacts.id = recipients.contactid
where recipients.emailid = @id"
    @id:x:/../*/id?value
  _to
  _cc
  _bcc

  /*
   * Creating recipients list, and putting into adequate node above.
   * This becomes a comma separated string for each of the above recipient types.
   */
  for-each:x:/@p5.mysql.select/*/*/type/=To/.
    set:x:/@_to?value
      src:{0}, {1} &lt;{2}&gt;
        :x:/@_to?value
        :x:/@_dp/#/*/name?value
        :x:/@_dp/#/*/email?value
  set:x:/@_to?value
    trim:x:/@_to?value
      chars:" ,"
  for-each:x:/@p5.mysql.select/*/*/type/=Cc/.
    set:x:/@_cc?value
      src:{0}, {1} &lt;{2}&gt;
        :x:/@_cc?value
        :x:/@_dp/#/*/name?value
        :x:/@_dp/#/*/email?value
  set:x:/@_cc?value
    trim:x:/@_cc?value
      chars:" ,"
  for-each:x:/@p5.mysql.select/*/*/type/=Bcc/.
    set:x:/@_bcc?value
      src:{0}, {1} &lt;{2}&gt;
        :x:/@_bcc?value
        :x:/@_dp/#/*/name?value
        :x:/@_dp/#/*/email?value
  set:x:/@_bcc?value
    trim:x:/@_bcc?value
      chars:" ,"

  /*
   * Retrieving actual email.
   */
  p5.mysql.select:@"select subject, date, signature, fingerprint, encrypted, type, name, email from emails 
inner join contacts on emails.sender = contacts.id 
where emails.id = @id"
    @id:x:/../*/id?value

  /*
   * This part will contain the background color of the reader, which
   * depends upon whether or not the email was encrypted or not.
   */
  _bg
  if:x:/@p5.mysql.select/*/*/encrypted?value.int
    !=:int:0
    and:x:/@p5.mysql.select/*/*/signature?value

    /*
     * Email was both encrypted and signed.
     */
    set:x:/@_bg?value
      src:success

  else

    /*
     * Email was either not encrypted or not signed.
     */
    set:x:/@_bg?value
      src:warning

  /*
   * This part will contain all the "meta content" for email (from, date, signed, encrypted, etc)
   */
  _meta
  p5.types.date.format:x:/@p5.mysql.select/*/*/date?value
    format:"dd. MMM yyyy, HH:mm"
  set:x:/@_meta?value
    src:"From: {0} &lt;{1}&gt; - Received: {2}"
      :x:/@p5.mysql.select/*/*/name?value
      :x:/@p5.mysql.select/*/*/email?value
      :x:/@p5.types.date.format?value
  if:x:/@p5.mysql.select/*/*/encrypted?value.int
    !=:int:0
    set:x:/@_meta?value
      src:{0} - encrypted
        :x:/@_meta?value
  if:x:/@p5.mysql.select/*/*/signature?value
    p5.html.html-encode:x:/@p5.mysql.select/*/*/signature?value
    set:x:/@_meta?value
      src:{0} - Signature - {1}
        :x:/@_meta?value
        :x:/@p5.html.html-encode?value

  /*
   * Making sure we set email as read in database.
   */
  p5.mysql.update:@"update emails set isread = 1 where id = @id"
    @id:x:/../*/id?value

  /*
   * Storing fingerprint as string, for later reference.
   */
  _fingerprint
  if:x:/@p5.mysql.select/*/*/fingerprint?value
    set:x:/@_fingerprint?value
      src:" Fingerprint: '{0}'"
        :x:/@p5.mysql.select/*/*/fingerprint?value

  /*
   * Selecting content of email.
   */
  p5.mysql.select:@"select * from parts where emailid = @id"
    @id:x:/../*/id?value

  /*
   * This part will contain the content to display to the user.
   */
  _content

  /*
   * Contains quoted parts.
   */
  _quote

  /*
   * Checking if a "plain/text" part exists for this email.
   */
  if:x:/@p5.mysql.select/*/*/type/=plain

    /*
     * Plain part exists.
     * Using regex to replace all URLs with hyperlinks.
     */
    p5.html.html-encode:x:/@p5.mysql.select/*/*/type/=plain/./*/content?value
    replace:x:/@p5.html.html-encode?value
      src:regex:@"/((http|ftp|https):\/\/[\w\-_]+(\.[\w\-_]+)+([\w\-\.,@?^=%&amp;:/~\+#]*[\w\-\@?^=%&amp;/~\+#])?)/c"
      dest:"<a target='_blank' href='$1'>$1</a>"
    split:x:/@replace?value
      =:@"
&gt;"
    set:x:/@_content?value
      src:x:/@split/0?name
    if:x:/@split/*?count
      >:int:1
      set:x:/@split/0
      join:x:/@split/*?name
        sep:@"
&gt;"
      set:x:/@_quote?value
        src:@"
&gt;{0}"
          :x:/@join?value
    else

      /*
       * No quoted parts, deleting "show quote button" and "quote content".
       */
      set:x:/../*/create-widget/**/widgets/=content/*(/button|/p/*/.quote/.)

  else

    /*
     * Only HTML part exists.
     * Stripping out everything that is considered "dangerous HTML".
     */
    p5.html.html2lambda:x:/@p5.mysql.select/*/*/type/=html/./*/content?value

    /*
     * Removing entire "head" part.
     */
    set:x:/@p5.html.html2lambda/*/*/head

    /*
     * Removing everything not in whitelist.
     */
    set:x:@"/@p5.html.html2lambda/*/**(!/body!/div!/table!/tr!/td!/th!/p!/span!/a!/strong!/br!/em!/img!/""\\#text""!/""\\@href"")"

    /*
     * Making sure we get "_blank" target for each hyperlink.
     */
    add:x:/@p5.html.html2lambda/*/**/a
      src
        @target:_blank

    /*
     * Transforming back to HTML.
     */
    p5.html.lambda2html:x:/@p5.html.html2lambda/*/*/body/*(!/~@)
    set:x:/@_content?value
      src:x:/@p5.html.lambda2html?value

    /*
     * No quoted parts, deleting "show quote button" and "quote content".
     */
    set:x:/../*/create-widget/**/widgets/=content/*(/button|/p/*/.quote/.)


/*
 * Loading all action buttons.
 */
list-files:@SEPHIA/inbox/action-buttons/
  filter:.hl
load-file:x:/-/*?name
add:x:/../*/create-widget/**/widgets/=action-strip
  src:x:/@load-file/*/*


/*
 * Making sure email is displayed as read in grid.
 */
p5.web.widgets.find-like:sephia-main-container
  .row-email-id:x:/../*/id?value
get-widget-property:x:/-/*/*?value
  class
if:x:/-/*/*?value
  ~:sephia-unread
  micro.css.toggle:x:/@p5.web.widgets.find-like/*/*?value
    class:sephia-unread


/*
 * Creates actual widget showing email.
 */
create-widget
  parent:sephia-main-container
  class:row air-top
  .email-id:x:/../*/id?value
  widgets
    div
      class:col
      widgets
        div
          class:air-inner {0} shaded rounded
            :x:/@p5.mysql.connect/*/_bg?value
          widgets:content
            h3
              innerValue:x:/@p5.mysql.connect/*/p5.mysql.select/[2,3]/*/*/subject?value
            div
              style:"white-space:pre-wrap;"
              innerValue:x:/@p5.mysql.connect/*/_content?value
            button
              innerValue:...
              class:air-top
              onclick

                /*
                 * Displays quoted parts of email.
                 */
                p5.web.widgets.get-parent:x:/../*/_event?value
                p5.web.widgets.find:x:/-/*/*?value
                  .quote
                set-widget-property:x:/-/*/*?value
                  visible:true
                delete-widget:x:/../*/_event?value

            p
              .quote
              style:"white-space:pre-wrap;"
              visible:false
              innerValue:x:/@p5.mysql.connect/*/_quote?value
            p
              style:"color:rgba(0,0,0,.3);font-style:italic;"
              class:air-top
              innerValue:x:/@p5.mysql.connect/*/_meta?value
            container
              class:sephia-inbox-attachments
              widgets:attachments
            div
              class:right
              widgets
                div
                  class:strip
                  style:"display:inline-block;"
                  widgets:action-strip





/*
 * Updating email count.
 */
load-file:@SEPHIA/inbox/update-count.hl
eval:x:/-/*
